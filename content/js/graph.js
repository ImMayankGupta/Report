/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 14768.0, "series": [{"data": [[0.0, 27.0], [0.1, 27.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 27.0], [1.8, 27.0], [1.9, 27.0], [2.0, 27.0], [2.1, 27.0], [2.2, 27.0], [2.3, 27.0], [2.4, 27.0], [2.5, 27.0], [2.6, 27.0], [2.7, 27.0], [2.8, 27.0], [2.9, 27.0], [3.0, 27.0], [3.1, 27.0], [3.2, 27.0], [3.3, 27.0], [3.4, 27.0], [3.5, 27.0], [3.6, 27.0], [3.7, 27.0], [3.8, 27.0], [3.9, 27.0], [4.0, 27.0], [4.1, 27.0], [4.2, 27.0], [4.3, 27.0], [4.4, 27.0], [4.5, 27.0], [4.6, 27.0], [4.7, 27.0], [4.8, 27.0], [4.9, 27.0], [5.0, 27.0], [5.1, 27.0], [5.2, 27.0], [5.3, 27.0], [5.4, 27.0], [5.5, 27.0], [5.6, 27.0], [5.7, 27.0], [5.8, 27.0], [5.9, 27.0], [6.0, 27.0], [6.1, 27.0], [6.2, 27.0], [6.3, 27.0], [6.4, 28.0], [6.5, 28.0], [6.6, 28.0], [6.7, 28.0], [6.8, 28.0], [6.9, 28.0], [7.0, 28.0], [7.1, 28.0], [7.2, 28.0], [7.3, 28.0], [7.4, 28.0], [7.5, 28.0], [7.6, 28.0], [7.7, 28.0], [7.8, 28.0], [7.9, 28.0], [8.0, 28.0], [8.1, 28.0], [8.2, 28.0], [8.3, 28.0], [8.4, 28.0], [8.5, 28.0], [8.6, 28.0], [8.7, 28.0], [8.8, 28.0], [8.9, 28.0], [9.0, 28.0], [9.1, 28.0], [9.2, 28.0], [9.3, 28.0], [9.4, 28.0], [9.5, 28.0], [9.6, 28.0], [9.7, 28.0], [9.8, 28.0], [9.9, 28.0], [10.0, 28.0], [10.1, 28.0], [10.2, 28.0], [10.3, 28.0], [10.4, 28.0], [10.5, 28.0], [10.6, 28.0], [10.7, 28.0], [10.8, 28.0], [10.9, 28.0], [11.0, 28.0], [11.1, 28.0], [11.2, 28.0], [11.3, 28.0], [11.4, 28.0], [11.5, 28.0], [11.6, 28.0], [11.7, 28.0], [11.8, 28.0], [11.9, 28.0], [12.0, 28.0], [12.1, 28.0], [12.2, 28.0], [12.3, 28.0], [12.4, 28.0], [12.5, 28.0], [12.6, 28.0], [12.7, 28.0], [12.8, 28.0], [12.9, 28.0], [13.0, 28.0], [13.1, 28.0], [13.2, 28.0], [13.3, 28.0], [13.4, 28.0], [13.5, 28.0], [13.6, 28.0], [13.7, 28.0], [13.8, 28.0], [13.9, 28.0], [14.0, 28.0], [14.1, 28.0], [14.2, 28.0], [14.3, 28.0], [14.4, 28.0], [14.5, 28.0], [14.6, 28.0], [14.7, 28.0], [14.8, 28.0], [14.9, 28.0], [15.0, 28.0], [15.1, 28.0], [15.2, 28.0], [15.3, 28.0], [15.4, 28.0], [15.5, 28.0], [15.6, 28.0], [15.7, 28.0], [15.8, 28.0], [15.9, 28.0], [16.0, 28.0], [16.1, 28.0], [16.2, 28.0], [16.3, 28.0], [16.4, 28.0], [16.5, 28.0], [16.6, 28.0], [16.7, 28.0], [16.8, 28.0], [16.9, 28.0], [17.0, 28.0], [17.1, 28.0], [17.2, 28.0], [17.3, 28.0], [17.4, 28.0], [17.5, 28.0], [17.6, 28.0], [17.7, 28.0], [17.8, 28.0], [17.9, 28.0], [18.0, 28.0], [18.1, 28.0], [18.2, 28.0], [18.3, 28.0], [18.4, 28.0], [18.5, 28.0], [18.6, 28.0], [18.7, 28.0], [18.8, 28.0], [18.9, 28.0], [19.0, 28.0], [19.1, 28.0], [19.2, 28.0], [19.3, 28.0], [19.4, 28.0], [19.5, 28.0], [19.6, 28.0], [19.7, 28.0], [19.8, 28.0], [19.9, 28.0], [20.0, 28.0], [20.1, 28.0], [20.2, 28.0], [20.3, 28.0], [20.4, 28.0], [20.5, 28.0], [20.6, 28.0], [20.7, 28.0], [20.8, 28.0], [20.9, 28.0], [21.0, 28.0], [21.1, 28.0], [21.2, 28.0], [21.3, 28.0], [21.4, 28.0], [21.5, 28.0], [21.6, 28.0], [21.7, 28.0], [21.8, 28.0], [21.9, 28.0], [22.0, 28.0], [22.1, 28.0], [22.2, 28.0], [22.3, 28.0], [22.4, 28.0], [22.5, 28.0], [22.6, 28.0], [22.7, 28.0], [22.8, 28.0], [22.9, 28.0], [23.0, 28.0], [23.1, 28.0], [23.2, 28.0], [23.3, 28.0], [23.4, 28.0], [23.5, 28.0], [23.6, 28.0], [23.7, 28.0], [23.8, 28.0], [23.9, 28.0], [24.0, 28.0], [24.1, 28.0], [24.2, 28.0], [24.3, 28.0], [24.4, 28.0], [24.5, 28.0], [24.6, 28.0], [24.7, 28.0], [24.8, 28.0], [24.9, 28.0], [25.0, 28.0], [25.1, 28.0], [25.2, 28.0], [25.3, 28.0], [25.4, 28.0], [25.5, 28.0], [25.6, 28.0], [25.7, 28.0], [25.8, 28.0], [25.9, 28.0], [26.0, 28.0], [26.1, 28.0], [26.2, 28.0], [26.3, 28.0], [26.4, 28.0], [26.5, 28.0], [26.6, 28.0], [26.7, 28.0], [26.8, 28.0], [26.9, 28.0], [27.0, 28.0], [27.1, 28.0], [27.2, 28.0], [27.3, 28.0], [27.4, 28.0], [27.5, 28.0], [27.6, 28.0], [27.7, 28.0], [27.8, 28.0], [27.9, 28.0], [28.0, 28.0], [28.1, 28.0], [28.2, 28.0], [28.3, 29.0], [28.4, 29.0], [28.5, 29.0], [28.6, 29.0], [28.7, 29.0], [28.8, 29.0], [28.9, 29.0], [29.0, 29.0], [29.1, 29.0], [29.2, 29.0], [29.3, 29.0], [29.4, 29.0], [29.5, 29.0], [29.6, 29.0], [29.7, 29.0], [29.8, 29.0], [29.9, 29.0], [30.0, 29.0], [30.1, 29.0], [30.2, 29.0], [30.3, 29.0], [30.4, 29.0], [30.5, 29.0], [30.6, 29.0], [30.7, 29.0], [30.8, 29.0], [30.9, 29.0], [31.0, 29.0], [31.1, 29.0], [31.2, 29.0], [31.3, 29.0], [31.4, 29.0], [31.5, 29.0], [31.6, 29.0], [31.7, 29.0], [31.8, 29.0], [31.9, 29.0], [32.0, 29.0], [32.1, 29.0], [32.2, 29.0], [32.3, 29.0], [32.4, 29.0], [32.5, 29.0], [32.6, 29.0], [32.7, 29.0], [32.8, 29.0], [32.9, 29.0], [33.0, 29.0], [33.1, 29.0], [33.2, 29.0], [33.3, 29.0], [33.4, 29.0], [33.5, 29.0], [33.6, 29.0], [33.7, 29.0], [33.8, 29.0], [33.9, 29.0], [34.0, 29.0], [34.1, 29.0], [34.2, 29.0], [34.3, 29.0], [34.4, 29.0], [34.5, 29.0], [34.6, 29.0], [34.7, 29.0], [34.8, 29.0], [34.9, 29.0], [35.0, 29.0], [35.1, 29.0], [35.2, 29.0], [35.3, 29.0], [35.4, 29.0], [35.5, 29.0], [35.6, 29.0], [35.7, 29.0], [35.8, 29.0], [35.9, 29.0], [36.0, 29.0], [36.1, 29.0], [36.2, 29.0], [36.3, 29.0], [36.4, 29.0], [36.5, 29.0], [36.6, 29.0], [36.7, 29.0], [36.8, 29.0], [36.9, 29.0], [37.0, 29.0], [37.1, 29.0], [37.2, 29.0], [37.3, 29.0], [37.4, 29.0], [37.5, 29.0], [37.6, 29.0], [37.7, 29.0], [37.8, 29.0], [37.9, 29.0], [38.0, 29.0], [38.1, 30.0], [38.2, 30.0], [38.3, 30.0], [38.4, 30.0], [38.5, 30.0], [38.6, 30.0], [38.7, 30.0], [38.8, 30.0], [38.9, 30.0], [39.0, 30.0], [39.1, 30.0], [39.2, 30.0], [39.3, 30.0], [39.4, 30.0], [39.5, 30.0], [39.6, 30.0], [39.7, 30.0], [39.8, 30.0], [39.9, 30.0], [40.0, 30.0], [40.1, 30.0], [40.2, 30.0], [40.3, 30.0], [40.4, 30.0], [40.5, 30.0], [40.6, 30.0], [40.7, 30.0], [40.8, 30.0], [40.9, 30.0], [41.0, 30.0], [41.1, 30.0], [41.2, 30.0], [41.3, 30.0], [41.4, 30.0], [41.5, 30.0], [41.6, 30.0], [41.7, 30.0], [41.8, 30.0], [41.9, 30.0], [42.0, 30.0], [42.1, 30.0], [42.2, 30.0], [42.3, 30.0], [42.4, 30.0], [42.5, 30.0], [42.6, 30.0], [42.7, 30.0], [42.8, 30.0], [42.9, 30.0], [43.0, 31.0], [43.1, 31.0], [43.2, 31.0], [43.3, 31.0], [43.4, 31.0], [43.5, 31.0], [43.6, 31.0], [43.7, 31.0], [43.8, 32.0], [43.9, 32.0], [44.0, 32.0], [44.1, 32.0], [44.2, 84.0], [44.3, 85.0], [44.4, 85.0], [44.5, 85.0], [44.6, 86.0], [44.7, 86.0], [44.8, 86.0], [44.9, 86.0], [45.0, 86.0], [45.1, 86.0], [45.2, 86.0], [45.3, 86.0], [45.4, 87.0], [45.5, 87.0], [45.6, 87.0], [45.7, 87.0], [45.8, 87.0], [45.9, 87.0], [46.0, 87.0], [46.1, 87.0], [46.2, 87.0], [46.3, 87.0], [46.4, 87.0], [46.5, 88.0], [46.6, 88.0], [46.7, 88.0], [46.8, 88.0], [46.9, 88.0], [47.0, 88.0], [47.1, 88.0], [47.2, 88.0], [47.3, 88.0], [47.4, 88.0], [47.5, 88.0], [47.6, 88.0], [47.7, 88.0], [47.8, 88.0], [47.9, 88.0], [48.0, 88.0], [48.1, 88.0], [48.2, 88.0], [48.3, 89.0], [48.4, 89.0], [48.5, 89.0], [48.6, 89.0], [48.7, 89.0], [48.8, 89.0], [48.9, 89.0], [49.0, 89.0], [49.1, 89.0], [49.2, 89.0], [49.3, 89.0], [49.4, 89.0], [49.5, 89.0], [49.6, 89.0], [49.7, 89.0], [49.8, 89.0], [49.9, 89.0], [50.0, 89.0], [50.1, 89.0], [50.2, 90.0], [50.3, 90.0], [50.4, 90.0], [50.5, 90.0], [50.6, 90.0], [50.7, 90.0], [50.8, 90.0], [50.9, 90.0], [51.0, 90.0], [51.1, 90.0], [51.2, 91.0], [51.3, 91.0], [51.4, 91.0], [51.5, 92.0], [51.6, 92.0], [51.7, 92.0], [51.8, 92.0], [51.9, 92.0], [52.0, 93.0], [52.1, 94.0], [52.2, 287.0], [52.3, 287.0], [52.4, 290.0], [52.5, 290.0], [52.6, 291.0], [52.7, 294.0], [52.8, 295.0], [52.9, 298.0], [53.0, 302.0], [53.1, 349.0], [53.2, 396.0], [53.3, 422.0], [53.4, 543.0], [53.5, 723.0], [53.6, 725.0], [53.7, 726.0], [53.8, 726.0], [53.9, 727.0], [54.0, 727.0], [54.1, 728.0], [54.2, 729.0], [54.3, 730.0], [54.4, 730.0], [54.5, 731.0], [54.6, 732.0], [54.7, 734.0], [54.8, 735.0], [54.9, 778.0], [55.0, 791.0], [55.1, 792.0], [55.2, 818.0], [55.3, 830.0], [55.4, 918.0], [55.5, 935.0], [55.6, 1019.0], [55.7, 1282.0], [55.8, 1283.0], [55.9, 1285.0], [56.0, 1286.0], [56.1, 1290.0], [56.2, 1291.0], [56.3, 1292.0], [56.4, 1293.0], [56.5, 1349.0], [56.6, 1785.0], [56.7, 1785.0], [56.8, 1791.0], [56.9, 1815.0], [57.0, 2011.0], [57.1, 2150.0], [57.2, 2227.0], [57.3, 2531.0], [57.4, 2577.0], [57.5, 2711.0], [57.6, 2790.0], [57.7, 2795.0], [57.8, 2804.0], [57.9, 3175.0], [58.0, 3293.0], [58.1, 3296.0], [58.2, 3305.0], [58.3, 3306.0], [58.4, 3312.0], [58.5, 3393.0], [58.6, 3440.0], [58.7, 3761.0], [58.8, 3791.0], [58.9, 3798.0], [59.0, 3815.0], [59.1, 3867.0], [59.2, 3926.0], [59.3, 4285.0], [59.4, 4298.0], [59.5, 4315.0], [59.6, 4352.0], [59.7, 4376.0], [59.8, 4790.0], [59.9, 4800.0], [60.0, 4808.0], [60.1, 4809.0], [60.2, 4912.0], [60.3, 5132.0], [60.4, 5222.0], [60.5, 5339.0], [60.6, 5342.0], [60.7, 5358.0], [60.8, 5367.0], [60.9, 5389.0], [61.0, 5390.0], [61.1, 5397.0], [61.2, 5436.0], [61.3, 5439.0], [61.4, 5439.0], [61.5, 5440.0], [61.6, 5452.0], [61.7, 5455.0], [61.8, 5480.0], [61.9, 5485.0], [62.0, 5499.0], [62.1, 5536.0], [62.2, 5564.0], [62.3, 5566.0], [62.4, 5570.0], [62.5, 5576.0], [62.6, 5596.0], [62.7, 5597.0], [62.8, 5598.0], [62.9, 5599.0], [63.0, 5626.0], [63.1, 5676.0], [63.2, 5689.0], [63.3, 5700.0], [63.4, 5702.0], [63.5, 5712.0], [63.6, 5738.0], [63.7, 5804.0], [63.8, 5809.0], [63.9, 5811.0], [64.0, 5811.0], [64.1, 5830.0], [64.2, 5841.0], [64.3, 5890.0], [64.4, 5896.0], [64.5, 5902.0], [64.6, 5909.0], [64.7, 5910.0], [64.8, 5925.0], [64.9, 5944.0], [65.0, 5948.0], [65.1, 5949.0], [65.2, 5988.0], [65.3, 5990.0], [65.4, 6013.0], [65.5, 6018.0], [65.6, 6072.0], [65.7, 6077.0], [65.8, 6149.0], [65.9, 6157.0], [66.0, 6164.0], [66.1, 6169.0], [66.2, 6180.0], [66.3, 6196.0], [66.4, 6225.0], [66.5, 6269.0], [66.6, 6285.0], [66.7, 6344.0], [66.8, 6360.0], [66.9, 6362.0], [67.0, 6366.0], [67.1, 6413.0], [67.2, 6491.0], [67.3, 6640.0], [67.4, 6737.0], [67.5, 6810.0], [67.6, 6816.0], [67.7, 6935.0], [67.8, 6961.0], [67.9, 7000.0], [68.0, 7014.0], [68.1, 7076.0], [68.2, 7107.0], [68.3, 7147.0], [68.4, 7188.0], [68.5, 7223.0], [68.6, 7310.0], [68.7, 7371.0], [68.8, 7496.0], [68.9, 7509.0], [69.0, 7511.0], [69.1, 7511.0], [69.2, 7548.0], [69.3, 7571.0], [69.4, 7642.0], [69.5, 7644.0], [69.6, 7726.0], [69.7, 7793.0], [69.8, 7805.0], [69.9, 7884.0], [70.0, 8041.0], [70.1, 8045.0], [70.2, 8060.0], [70.3, 8061.0], [70.4, 8063.0], [70.5, 8092.0], [70.6, 8139.0], [70.7, 8234.0], [70.8, 8257.0], [70.9, 8258.0], [71.0, 8270.0], [71.1, 8317.0], [71.2, 8358.0], [71.3, 8381.0], [71.4, 8433.0], [71.5, 8452.0], [71.6, 8538.0], [71.7, 8541.0], [71.8, 8566.0], [71.9, 8736.0], [72.0, 8753.0], [72.1, 8766.0], [72.2, 8821.0], [72.3, 8827.0], [72.4, 8860.0], [72.5, 8866.0], [72.6, 8939.0], [72.7, 8998.0], [72.8, 9021.0], [72.9, 9048.0], [73.0, 9052.0], [73.1, 9108.0], [73.2, 9149.0], [73.3, 9158.0], [73.4, 9186.0], [73.5, 9252.0], [73.6, 9263.0], [73.7, 9276.0], [73.8, 9295.0], [73.9, 9356.0], [74.0, 9370.0], [74.1, 9372.0], [74.2, 9473.0], [74.3, 9489.0], [74.4, 9524.0], [74.5, 9527.0], [74.6, 9529.0], [74.7, 9595.0], [74.8, 9597.0], [74.9, 9607.0], [75.0, 9646.0], [75.1, 9653.0], [75.2, 9690.0], [75.3, 9692.0], [75.4, 9710.0], [75.5, 9759.0], [75.6, 9771.0], [75.7, 9810.0], [75.8, 9813.0], [75.9, 9819.0], [76.0, 9845.0], [76.1, 9886.0], [76.2, 9892.0], [76.3, 9894.0], [76.4, 9903.0], [76.5, 9915.0], [76.6, 9948.0], [76.7, 9954.0], [76.8, 9956.0], [76.9, 9985.0], [77.0, 9986.0], [77.1, 10006.0], [77.2, 10048.0], [77.3, 10050.0], [77.4, 10061.0], [77.5, 10063.0], [77.6, 10065.0], [77.7, 10092.0], [77.8, 10103.0], [77.9, 10116.0], [78.0, 10127.0], [78.1, 10127.0], [78.2, 10141.0], [78.3, 10145.0], [78.4, 10157.0], [78.5, 10178.0], [78.6, 10187.0], [78.7, 10238.0], [78.8, 10256.0], [78.9, 10272.0], [79.0, 10274.0], [79.1, 10280.0], [79.2, 10299.0], [79.3, 10321.0], [79.4, 10340.0], [79.5, 10368.0], [79.6, 10370.0], [79.7, 10382.0], [79.8, 10395.0], [79.9, 10401.0], [80.0, 10407.0], [80.1, 10407.0], [80.2, 10420.0], [80.3, 10426.0], [80.4, 10426.0], [80.5, 10430.0], [80.6, 10447.0], [80.7, 10466.0], [80.8, 10504.0], [80.9, 10521.0], [81.0, 10522.0], [81.1, 10531.0], [81.2, 10544.0], [81.3, 10551.0], [81.4, 10552.0], [81.5, 10564.0], [81.6, 10594.0], [81.7, 10610.0], [81.8, 10625.0], [81.9, 10631.0], [82.0, 10636.0], [82.1, 10654.0], [82.2, 10659.0], [82.3, 10664.0], [82.4, 10668.0], [82.5, 10673.0], [82.6, 10682.0], [82.7, 10697.0], [82.8, 10701.0], [82.9, 10705.0], [83.0, 10720.0], [83.1, 10721.0], [83.2, 10729.0], [83.3, 10733.0], [83.4, 10746.0], [83.5, 10750.0], [83.6, 10753.0], [83.7, 10760.0], [83.8, 10761.0], [83.9, 10769.0], [84.0, 10772.0], [84.1, 10786.0], [84.2, 10786.0], [84.3, 10793.0], [84.4, 10804.0], [84.5, 10813.0], [84.6, 10831.0], [84.7, 10832.0], [84.8, 10832.0], [84.9, 10854.0], [85.0, 10863.0], [85.1, 10866.0], [85.2, 10868.0], [85.3, 10875.0], [85.4, 10897.0], [85.5, 10903.0], [85.6, 10934.0], [85.7, 10980.0], [85.8, 10980.0], [85.9, 11048.0], [86.0, 11060.0], [86.1, 11066.0], [86.2, 11085.0], [86.3, 11094.0], [86.4, 11095.0], [86.5, 11104.0], [86.6, 11140.0], [86.7, 11140.0], [86.8, 11145.0], [86.9, 11195.0], [87.0, 11197.0], [87.1, 11203.0], [87.2, 11219.0], [87.3, 11243.0], [87.4, 11265.0], [87.5, 11273.0], [87.6, 11274.0], [87.7, 11274.0], [87.8, 11277.0], [87.9, 11301.0], [88.0, 11309.0], [88.1, 11322.0], [88.2, 11350.0], [88.3, 11358.0], [88.4, 11377.0], [88.5, 11385.0], [88.6, 11420.0], [88.7, 11420.0], [88.8, 11428.0], [88.9, 11444.0], [89.0, 11453.0], [89.1, 11471.0], [89.2, 11480.0], [89.3, 11481.0], [89.4, 11499.0], [89.5, 11503.0], [89.6, 11553.0], [89.7, 11601.0], [89.8, 11610.0], [89.9, 11611.0], [90.0, 11641.0], [90.1, 11647.0], [90.2, 11649.0], [90.3, 11654.0], [90.4, 11675.0], [90.5, 11682.0], [90.6, 11695.0], [90.7, 11723.0], [90.8, 11730.0], [90.9, 11758.0], [91.0, 11772.0], [91.1, 11773.0], [91.2, 11776.0], [91.3, 11802.0], [91.4, 11844.0], [91.5, 11874.0], [91.6, 11877.0], [91.7, 11880.0], [91.8, 11887.0], [91.9, 11901.0], [92.0, 11909.0], [92.1, 11927.0], [92.2, 11931.0], [92.3, 11949.0], [92.4, 11960.0], [92.5, 11971.0], [92.6, 11983.0], [92.7, 11993.0], [92.8, 12028.0], [92.9, 12034.0], [93.0, 12057.0], [93.1, 12078.0], [93.2, 12078.0], [93.3, 12113.0], [93.4, 12129.0], [93.5, 12147.0], [93.6, 12149.0], [93.7, 12150.0], [93.8, 12156.0], [93.9, 12188.0], [94.0, 12198.0], [94.1, 12200.0], [94.2, 12244.0], [94.3, 12266.0], [94.4, 12272.0], [94.5, 12275.0], [94.6, 12276.0], [94.7, 12284.0], [94.8, 12284.0], [94.9, 12287.0], [95.0, 12290.0], [95.1, 12293.0], [95.2, 12303.0], [95.3, 12306.0], [95.4, 12320.0], [95.5, 12328.0], [95.6, 12341.0], [95.7, 12346.0], [95.8, 12355.0], [95.9, 12359.0], [96.0, 12380.0], [96.1, 12438.0], [96.2, 12442.0], [96.3, 12474.0], [96.4, 12549.0], [96.5, 12568.0], [96.6, 12581.0], [96.7, 12584.0], [96.8, 12611.0], [96.9, 12692.0], [97.0, 12748.0], [97.1, 12749.0], [97.2, 12780.0], [97.3, 12794.0], [97.4, 12833.0], [97.5, 12887.0], [97.6, 12933.0], [97.7, 12941.0], [97.8, 13000.0], [97.9, 13063.0], [98.0, 13135.0], [98.1, 13139.0], [98.2, 13313.0], [98.3, 13365.0], [98.4, 13371.0], [98.5, 13414.0], [98.6, 13419.0], [98.7, 13567.0], [98.8, 13619.0], [98.9, 13645.0], [99.0, 13704.0], [99.1, 13724.0], [99.2, 13790.0], [99.3, 13790.0], [99.4, 13798.0], [99.5, 13825.0], [99.6, 13851.0], [99.7, 14026.0], [99.8, 14506.0], [99.9, 14620.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 26.0], [0.3, 26.0], [0.4, 26.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 27.0], [1.8, 27.0], [1.9, 27.0], [2.0, 27.0], [2.1, 27.0], [2.2, 27.0], [2.3, 27.0], [2.4, 27.0], [2.5, 27.0], [2.6, 27.0], [2.7, 27.0], [2.8, 27.0], [2.9, 27.0], [3.0, 27.0], [3.1, 27.0], [3.2, 27.0], [3.3, 27.0], [3.4, 27.0], [3.5, 27.0], [3.6, 27.0], [3.7, 27.0], [3.8, 27.0], [3.9, 27.0], [4.0, 27.0], [4.1, 27.0], [4.2, 27.0], [4.3, 27.0], [4.4, 27.0], [4.5, 27.0], [4.6, 27.0], [4.7, 27.0], [4.8, 27.0], [4.9, 27.0], [5.0, 27.0], [5.1, 27.0], [5.2, 27.0], [5.3, 27.0], [5.4, 27.0], [5.5, 27.0], [5.6, 27.0], [5.7, 27.0], [5.8, 27.0], [5.9, 27.0], [6.0, 27.0], [6.1, 27.0], [6.2, 27.0], [6.3, 27.0], [6.4, 27.0], [6.5, 27.0], [6.6, 27.0], [6.7, 27.0], [6.8, 27.0], [6.9, 27.0], [7.0, 27.0], [7.1, 27.0], [7.2, 27.0], [7.3, 27.0], [7.4, 27.0], [7.5, 27.0], [7.6, 27.0], [7.7, 27.0], [7.8, 27.0], [7.9, 27.0], [8.0, 27.0], [8.1, 27.0], [8.2, 27.0], [8.3, 27.0], [8.4, 27.0], [8.5, 27.0], [8.6, 27.0], [8.7, 27.0], [8.8, 27.0], [8.9, 27.0], [9.0, 27.0], [9.1, 27.0], [9.2, 27.0], [9.3, 27.0], [9.4, 27.0], [9.5, 27.0], [9.6, 27.0], [9.7, 27.0], [9.8, 27.0], [9.9, 27.0], [10.0, 27.0], [10.1, 27.0], [10.2, 27.0], [10.3, 27.0], [10.4, 27.0], [10.5, 27.0], [10.6, 27.0], [10.7, 27.0], [10.8, 27.0], [10.9, 27.0], [11.0, 27.0], [11.1, 27.0], [11.2, 27.0], [11.3, 27.0], [11.4, 27.0], [11.5, 27.0], [11.6, 27.0], [11.7, 28.0], [11.8, 28.0], [11.9, 28.0], [12.0, 28.0], [12.1, 28.0], [12.2, 28.0], [12.3, 28.0], [12.4, 28.0], [12.5, 28.0], [12.6, 28.0], [12.7, 28.0], [12.8, 28.0], [12.9, 28.0], [13.0, 28.0], [13.1, 28.0], [13.2, 28.0], [13.3, 28.0], [13.4, 28.0], [13.5, 28.0], [13.6, 28.0], [13.7, 28.0], [13.8, 28.0], [13.9, 28.0], [14.0, 28.0], [14.1, 28.0], [14.2, 28.0], [14.3, 28.0], [14.4, 28.0], [14.5, 28.0], [14.6, 28.0], [14.7, 28.0], [14.8, 28.0], [14.9, 28.0], [15.0, 28.0], [15.1, 28.0], [15.2, 28.0], [15.3, 28.0], [15.4, 28.0], [15.5, 28.0], [15.6, 28.0], [15.7, 28.0], [15.8, 28.0], [15.9, 28.0], [16.0, 28.0], [16.1, 28.0], [16.2, 28.0], [16.3, 28.0], [16.4, 28.0], [16.5, 28.0], [16.6, 28.0], [16.7, 28.0], [16.8, 28.0], [16.9, 28.0], [17.0, 28.0], [17.1, 28.0], [17.2, 28.0], [17.3, 28.0], [17.4, 28.0], [17.5, 28.0], [17.6, 28.0], [17.7, 28.0], [17.8, 28.0], [17.9, 28.0], [18.0, 28.0], [18.1, 28.0], [18.2, 28.0], [18.3, 28.0], [18.4, 28.0], [18.5, 28.0], [18.6, 28.0], [18.7, 28.0], [18.8, 28.0], [18.9, 28.0], [19.0, 28.0], [19.1, 28.0], [19.2, 28.0], [19.3, 28.0], [19.4, 28.0], [19.5, 28.0], [19.6, 28.0], [19.7, 28.0], [19.8, 28.0], [19.9, 28.0], [20.0, 28.0], [20.1, 28.0], [20.2, 28.0], [20.3, 28.0], [20.4, 28.0], [20.5, 28.0], [20.6, 28.0], [20.7, 28.0], [20.8, 28.0], [20.9, 28.0], [21.0, 28.0], [21.1, 28.0], [21.2, 28.0], [21.3, 28.0], [21.4, 28.0], [21.5, 28.0], [21.6, 28.0], [21.7, 28.0], [21.8, 28.0], [21.9, 28.0], [22.0, 28.0], [22.1, 28.0], [22.2, 28.0], [22.3, 28.0], [22.4, 28.0], [22.5, 28.0], [22.6, 28.0], [22.7, 28.0], [22.8, 28.0], [22.9, 28.0], [23.0, 28.0], [23.1, 28.0], [23.2, 28.0], [23.3, 28.0], [23.4, 28.0], [23.5, 28.0], [23.6, 28.0], [23.7, 28.0], [23.8, 28.0], [23.9, 28.0], [24.0, 28.0], [24.1, 28.0], [24.2, 28.0], [24.3, 28.0], [24.4, 28.0], [24.5, 28.0], [24.6, 28.0], [24.7, 28.0], [24.8, 28.0], [24.9, 28.0], [25.0, 28.0], [25.1, 28.0], [25.2, 28.0], [25.3, 28.0], [25.4, 28.0], [25.5, 28.0], [25.6, 28.0], [25.7, 28.0], [25.8, 28.0], [25.9, 28.0], [26.0, 28.0], [26.1, 28.0], [26.2, 28.0], [26.3, 28.0], [26.4, 28.0], [26.5, 28.0], [26.6, 28.0], [26.7, 28.0], [26.8, 28.0], [26.9, 28.0], [27.0, 28.0], [27.1, 28.0], [27.2, 28.0], [27.3, 28.0], [27.4, 28.0], [27.5, 28.0], [27.6, 28.0], [27.7, 28.0], [27.8, 28.0], [27.9, 28.0], [28.0, 28.0], [28.1, 28.0], [28.2, 28.0], [28.3, 28.0], [28.4, 28.0], [28.5, 28.0], [28.6, 28.0], [28.7, 28.0], [28.8, 28.0], [28.9, 28.0], [29.0, 28.0], [29.1, 28.0], [29.2, 28.0], [29.3, 28.0], [29.4, 28.0], [29.5, 28.0], [29.6, 28.0], [29.7, 28.0], [29.8, 28.0], [29.9, 28.0], [30.0, 28.0], [30.1, 28.0], [30.2, 28.0], [30.3, 28.0], [30.4, 28.0], [30.5, 28.0], [30.6, 28.0], [30.7, 28.0], [30.8, 28.0], [30.9, 28.0], [31.0, 28.0], [31.1, 28.0], [31.2, 28.0], [31.3, 28.0], [31.4, 28.0], [31.5, 28.0], [31.6, 28.0], [31.7, 28.0], [31.8, 28.0], [31.9, 28.0], [32.0, 28.0], [32.1, 28.0], [32.2, 28.0], [32.3, 28.0], [32.4, 28.0], [32.5, 28.0], [32.6, 28.0], [32.7, 28.0], [32.8, 28.0], [32.9, 28.0], [33.0, 28.0], [33.1, 28.0], [33.2, 28.0], [33.3, 28.0], [33.4, 28.0], [33.5, 28.0], [33.6, 28.0], [33.7, 28.0], [33.8, 28.0], [33.9, 28.0], [34.0, 28.0], [34.1, 28.0], [34.2, 28.0], [34.3, 28.0], [34.4, 28.0], [34.5, 28.0], [34.6, 28.0], [34.7, 28.0], [34.8, 28.0], [34.9, 28.0], [35.0, 28.0], [35.1, 28.0], [35.2, 28.0], [35.3, 28.0], [35.4, 28.0], [35.5, 28.0], [35.6, 28.0], [35.7, 28.0], [35.8, 29.0], [35.9, 29.0], [36.0, 29.0], [36.1, 29.0], [36.2, 29.0], [36.3, 29.0], [36.4, 29.0], [36.5, 29.0], [36.6, 29.0], [36.7, 29.0], [36.8, 29.0], [36.9, 29.0], [37.0, 29.0], [37.1, 29.0], [37.2, 29.0], [37.3, 29.0], [37.4, 29.0], [37.5, 29.0], [37.6, 29.0], [37.7, 29.0], [37.8, 29.0], [37.9, 29.0], [38.0, 29.0], [38.1, 29.0], [38.2, 29.0], [38.3, 29.0], [38.4, 29.0], [38.5, 29.0], [38.6, 29.0], [38.7, 29.0], [38.8, 29.0], [38.9, 29.0], [39.0, 29.0], [39.1, 29.0], [39.2, 29.0], [39.3, 29.0], [39.4, 29.0], [39.5, 29.0], [39.6, 29.0], [39.7, 29.0], [39.8, 29.0], [39.9, 29.0], [40.0, 29.0], [40.1, 29.0], [40.2, 29.0], [40.3, 29.0], [40.4, 29.0], [40.5, 29.0], [40.6, 29.0], [40.7, 29.0], [40.8, 29.0], [40.9, 29.0], [41.0, 29.0], [41.1, 29.0], [41.2, 29.0], [41.3, 29.0], [41.4, 29.0], [41.5, 29.0], [41.6, 29.0], [41.7, 29.0], [41.8, 29.0], [41.9, 29.0], [42.0, 29.0], [42.1, 29.0], [42.2, 29.0], [42.3, 29.0], [42.4, 29.0], [42.5, 29.0], [42.6, 29.0], [42.7, 29.0], [42.8, 29.0], [42.9, 29.0], [43.0, 29.0], [43.1, 29.0], [43.2, 29.0], [43.3, 29.0], [43.4, 29.0], [43.5, 29.0], [43.6, 29.0], [43.7, 29.0], [43.8, 29.0], [43.9, 29.0], [44.0, 29.0], [44.1, 29.0], [44.2, 29.0], [44.3, 29.0], [44.4, 29.0], [44.5, 29.0], [44.6, 29.0], [44.7, 29.0], [44.8, 29.0], [44.9, 29.0], [45.0, 29.0], [45.1, 29.0], [45.2, 29.0], [45.3, 29.0], [45.4, 29.0], [45.5, 29.0], [45.6, 29.0], [45.7, 29.0], [45.8, 29.0], [45.9, 29.0], [46.0, 29.0], [46.1, 29.0], [46.2, 29.0], [46.3, 29.0], [46.4, 29.0], [46.5, 29.0], [46.6, 29.0], [46.7, 30.0], [46.8, 30.0], [46.9, 30.0], [47.0, 30.0], [47.1, 30.0], [47.2, 30.0], [47.3, 30.0], [47.4, 30.0], [47.5, 30.0], [47.6, 30.0], [47.7, 30.0], [47.8, 30.0], [47.9, 30.0], [48.0, 30.0], [48.1, 30.0], [48.2, 30.0], [48.3, 30.0], [48.4, 30.0], [48.5, 30.0], [48.6, 30.0], [48.7, 30.0], [48.8, 30.0], [48.9, 30.0], [49.0, 30.0], [49.1, 30.0], [49.2, 30.0], [49.3, 30.0], [49.4, 30.0], [49.5, 30.0], [49.6, 30.0], [49.7, 30.0], [49.8, 30.0], [49.9, 30.0], [50.0, 30.0], [50.1, 30.0], [50.2, 30.0], [50.3, 30.0], [50.4, 30.0], [50.5, 30.0], [50.6, 30.0], [50.7, 30.0], [50.8, 30.0], [50.9, 30.0], [51.0, 30.0], [51.1, 30.0], [51.2, 30.0], [51.3, 30.0], [51.4, 30.0], [51.5, 30.0], [51.6, 31.0], [51.7, 31.0], [51.8, 31.0], [51.9, 31.0], [52.0, 31.0], [52.1, 32.0], [52.2, 32.0], [52.3, 84.0], [52.4, 84.0], [52.5, 84.0], [52.6, 84.0], [52.7, 85.0], [52.8, 85.0], [52.9, 85.0], [53.0, 85.0], [53.1, 86.0], [53.2, 86.0], [53.3, 86.0], [53.4, 86.0], [53.5, 86.0], [53.6, 86.0], [53.7, 86.0], [53.8, 86.0], [53.9, 86.0], [54.0, 86.0], [54.1, 86.0], [54.2, 86.0], [54.3, 86.0], [54.4, 86.0], [54.5, 86.0], [54.6, 86.0], [54.7, 86.0], [54.8, 86.0], [54.9, 86.0], [55.0, 87.0], [55.1, 87.0], [55.2, 87.0], [55.3, 87.0], [55.4, 87.0], [55.5, 87.0], [55.6, 87.0], [55.7, 87.0], [55.8, 87.0], [55.9, 87.0], [56.0, 87.0], [56.1, 87.0], [56.2, 87.0], [56.3, 87.0], [56.4, 87.0], [56.5, 87.0], [56.6, 87.0], [56.7, 87.0], [56.8, 87.0], [56.9, 87.0], [57.0, 87.0], [57.1, 87.0], [57.2, 87.0], [57.3, 87.0], [57.4, 87.0], [57.5, 87.0], [57.6, 87.0], [57.7, 87.0], [57.8, 87.0], [57.9, 87.0], [58.0, 87.0], [58.1, 87.0], [58.2, 87.0], [58.3, 87.0], [58.4, 87.0], [58.5, 87.0], [58.6, 87.0], [58.7, 87.0], [58.8, 87.0], [58.9, 87.0], [59.0, 87.0], [59.1, 88.0], [59.2, 88.0], [59.3, 88.0], [59.4, 88.0], [59.5, 88.0], [59.6, 88.0], [59.7, 88.0], [59.8, 88.0], [59.9, 88.0], [60.0, 88.0], [60.1, 88.0], [60.2, 88.0], [60.3, 88.0], [60.4, 88.0], [60.5, 88.0], [60.6, 88.0], [60.7, 88.0], [60.8, 88.0], [60.9, 88.0], [61.0, 88.0], [61.1, 88.0], [61.2, 88.0], [61.3, 88.0], [61.4, 88.0], [61.5, 88.0], [61.6, 88.0], [61.7, 88.0], [61.8, 88.0], [61.9, 88.0], [62.0, 88.0], [62.1, 88.0], [62.2, 88.0], [62.3, 88.0], [62.4, 88.0], [62.5, 88.0], [62.6, 88.0], [62.7, 88.0], [62.8, 88.0], [62.9, 88.0], [63.0, 88.0], [63.1, 88.0], [63.2, 88.0], [63.3, 88.0], [63.4, 88.0], [63.5, 88.0], [63.6, 88.0], [63.7, 88.0], [63.8, 88.0], [63.9, 88.0], [64.0, 88.0], [64.1, 88.0], [64.2, 88.0], [64.3, 89.0], [64.4, 89.0], [64.5, 89.0], [64.6, 89.0], [64.7, 89.0], [64.8, 89.0], [64.9, 89.0], [65.0, 89.0], [65.1, 89.0], [65.2, 89.0], [65.3, 89.0], [65.4, 89.0], [65.5, 89.0], [65.6, 89.0], [65.7, 89.0], [65.8, 89.0], [65.9, 89.0], [66.0, 89.0], [66.1, 89.0], [66.2, 89.0], [66.3, 89.0], [66.4, 89.0], [66.5, 89.0], [66.6, 89.0], [66.7, 89.0], [66.8, 89.0], [66.9, 89.0], [67.0, 89.0], [67.1, 89.0], [67.2, 89.0], [67.3, 89.0], [67.4, 89.0], [67.5, 89.0], [67.6, 89.0], [67.7, 89.0], [67.8, 89.0], [67.9, 89.0], [68.0, 89.0], [68.1, 89.0], [68.2, 89.0], [68.3, 89.0], [68.4, 89.0], [68.5, 89.0], [68.6, 89.0], [68.7, 89.0], [68.8, 89.0], [68.9, 89.0], [69.0, 89.0], [69.1, 89.0], [69.2, 89.0], [69.3, 89.0], [69.4, 89.0], [69.5, 89.0], [69.6, 89.0], [69.7, 89.0], [69.8, 89.0], [69.9, 89.0], [70.0, 89.0], [70.1, 89.0], [70.2, 89.0], [70.3, 89.0], [70.4, 89.0], [70.5, 89.0], [70.6, 89.0], [70.7, 89.0], [70.8, 89.0], [70.9, 89.0], [71.0, 89.0], [71.1, 89.0], [71.2, 89.0], [71.3, 89.0], [71.4, 89.0], [71.5, 89.0], [71.6, 89.0], [71.7, 89.0], [71.8, 89.0], [71.9, 89.0], [72.0, 89.0], [72.1, 89.0], [72.2, 89.0], [72.3, 89.0], [72.4, 90.0], [72.5, 90.0], [72.6, 90.0], [72.7, 90.0], [72.8, 90.0], [72.9, 90.0], [73.0, 90.0], [73.1, 90.0], [73.2, 90.0], [73.3, 90.0], [73.4, 90.0], [73.5, 90.0], [73.6, 90.0], [73.7, 90.0], [73.8, 90.0], [73.9, 90.0], [74.0, 90.0], [74.1, 90.0], [74.2, 90.0], [74.3, 90.0], [74.4, 90.0], [74.5, 90.0], [74.6, 90.0], [74.7, 90.0], [74.8, 90.0], [74.9, 90.0], [75.0, 90.0], [75.1, 90.0], [75.2, 90.0], [75.3, 90.0], [75.4, 90.0], [75.5, 90.0], [75.6, 90.0], [75.7, 90.0], [75.8, 90.0], [75.9, 90.0], [76.0, 90.0], [76.1, 90.0], [76.2, 90.0], [76.3, 90.0], [76.4, 90.0], [76.5, 90.0], [76.6, 90.0], [76.7, 90.0], [76.8, 90.0], [76.9, 90.0], [77.0, 90.0], [77.1, 90.0], [77.2, 90.0], [77.3, 90.0], [77.4, 90.0], [77.5, 90.0], [77.6, 90.0], [77.7, 90.0], [77.8, 90.0], [77.9, 90.0], [78.0, 90.0], [78.1, 90.0], [78.2, 90.0], [78.3, 90.0], [78.4, 90.0], [78.5, 90.0], [78.6, 90.0], [78.7, 90.0], [78.8, 90.0], [78.9, 90.0], [79.0, 90.0], [79.1, 90.0], [79.2, 90.0], [79.3, 90.0], [79.4, 90.0], [79.5, 90.0], [79.6, 90.0], [79.7, 90.0], [79.8, 90.0], [79.9, 90.0], [80.0, 90.0], [80.1, 90.0], [80.2, 91.0], [80.3, 91.0], [80.4, 91.0], [80.5, 91.0], [80.6, 91.0], [80.7, 91.0], [80.8, 91.0], [80.9, 91.0], [81.0, 91.0], [81.1, 91.0], [81.2, 91.0], [81.3, 91.0], [81.4, 91.0], [81.5, 91.0], [81.6, 91.0], [81.7, 91.0], [81.8, 91.0], [81.9, 91.0], [82.0, 91.0], [82.1, 91.0], [82.2, 91.0], [82.3, 91.0], [82.4, 91.0], [82.5, 91.0], [82.6, 91.0], [82.7, 91.0], [82.8, 91.0], [82.9, 91.0], [83.0, 91.0], [83.1, 91.0], [83.2, 91.0], [83.3, 91.0], [83.4, 91.0], [83.5, 91.0], [83.6, 91.0], [83.7, 91.0], [83.8, 91.0], [83.9, 91.0], [84.0, 91.0], [84.1, 91.0], [84.2, 91.0], [84.3, 91.0], [84.4, 91.0], [84.5, 91.0], [84.6, 91.0], [84.7, 91.0], [84.8, 91.0], [84.9, 91.0], [85.0, 91.0], [85.1, 91.0], [85.2, 91.0], [85.3, 91.0], [85.4, 91.0], [85.5, 91.0], [85.6, 91.0], [85.7, 91.0], [85.8, 91.0], [85.9, 91.0], [86.0, 91.0], [86.1, 91.0], [86.2, 91.0], [86.3, 91.0], [86.4, 91.0], [86.5, 91.0], [86.6, 91.0], [86.7, 91.0], [86.8, 91.0], [86.9, 91.0], [87.0, 91.0], [87.1, 91.0], [87.2, 91.0], [87.3, 91.0], [87.4, 91.0], [87.5, 91.0], [87.6, 91.0], [87.7, 91.0], [87.8, 91.0], [87.9, 91.0], [88.0, 91.0], [88.1, 91.0], [88.2, 91.0], [88.3, 91.0], [88.4, 91.0], [88.5, 91.0], [88.6, 91.0], [88.7, 91.0], [88.8, 91.0], [88.9, 91.0], [89.0, 92.0], [89.1, 92.0], [89.2, 92.0], [89.3, 92.0], [89.4, 92.0], [89.5, 92.0], [89.6, 92.0], [89.7, 92.0], [89.8, 92.0], [89.9, 92.0], [90.0, 92.0], [90.1, 92.0], [90.2, 92.0], [90.3, 92.0], [90.4, 92.0], [90.5, 92.0], [90.6, 92.0], [90.7, 92.0], [90.8, 92.0], [90.9, 92.0], [91.0, 92.0], [91.1, 92.0], [91.2, 92.0], [91.3, 92.0], [91.4, 92.0], [91.5, 92.0], [91.6, 92.0], [91.7, 92.0], [91.8, 92.0], [91.9, 92.0], [92.0, 92.0], [92.1, 92.0], [92.2, 92.0], [92.3, 92.0], [92.4, 92.0], [92.5, 92.0], [92.6, 92.0], [92.7, 92.0], [92.8, 92.0], [92.9, 92.0], [93.0, 92.0], [93.1, 92.0], [93.2, 92.0], [93.3, 92.0], [93.4, 92.0], [93.5, 92.0], [93.6, 92.0], [93.7, 92.0], [93.8, 92.0], [93.9, 92.0], [94.0, 92.0], [94.1, 92.0], [94.2, 92.0], [94.3, 93.0], [94.4, 93.0], [94.5, 93.0], [94.6, 93.0], [94.7, 93.0], [94.8, 93.0], [94.9, 93.0], [95.0, 93.0], [95.1, 93.0], [95.2, 93.0], [95.3, 93.0], [95.4, 93.0], [95.5, 93.0], [95.6, 93.0], [95.7, 93.0], [95.8, 93.0], [95.9, 93.0], [96.0, 93.0], [96.1, 93.0], [96.2, 93.0], [96.3, 93.0], [96.4, 93.0], [96.5, 93.0], [96.6, 93.0], [96.7, 93.0], [96.8, 93.0], [96.9, 93.0], [97.0, 93.0], [97.1, 93.0], [97.2, 93.0], [97.3, 93.0], [97.4, 93.0], [97.5, 94.0], [97.6, 94.0], [97.7, 94.0], [97.8, 94.0], [97.9, 94.0], [98.0, 94.0], [98.1, 94.0], [98.2, 94.0], [98.3, 94.0], [98.4, 94.0], [98.5, 94.0], [98.6, 94.0], [98.7, 94.0], [98.8, 94.0], [98.9, 94.0], [99.0, 95.0], [99.1, 95.0], [99.2, 95.0], [99.3, 95.0], [99.4, 95.0], [99.5, 95.0], [99.6, 95.0], [99.7, 95.0], [99.8, 100.0], [99.9, 102.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 26.0], [0.3, 26.0], [0.4, 26.0], [0.5, 26.0], [0.6, 26.0], [0.7, 26.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 27.0], [1.8, 27.0], [1.9, 27.0], [2.0, 27.0], [2.1, 27.0], [2.2, 27.0], [2.3, 27.0], [2.4, 27.0], [2.5, 27.0], [2.6, 27.0], [2.7, 27.0], [2.8, 27.0], [2.9, 27.0], [3.0, 27.0], [3.1, 27.0], [3.2, 27.0], [3.3, 27.0], [3.4, 27.0], [3.5, 27.0], [3.6, 27.0], [3.7, 27.0], [3.8, 27.0], [3.9, 27.0], [4.0, 27.0], [4.1, 27.0], [4.2, 27.0], [4.3, 27.0], [4.4, 27.0], [4.5, 27.0], [4.6, 27.0], [4.7, 27.0], [4.8, 27.0], [4.9, 27.0], [5.0, 27.0], [5.1, 27.0], [5.2, 27.0], [5.3, 27.0], [5.4, 27.0], [5.5, 27.0], [5.6, 27.0], [5.7, 27.0], [5.8, 27.0], [5.9, 27.0], [6.0, 27.0], [6.1, 27.0], [6.2, 27.0], [6.3, 27.0], [6.4, 27.0], [6.5, 27.0], [6.6, 27.0], [6.7, 27.0], [6.8, 27.0], [6.9, 27.0], [7.0, 27.0], [7.1, 27.0], [7.2, 27.0], [7.3, 27.0], [7.4, 27.0], [7.5, 27.0], [7.6, 27.0], [7.7, 27.0], [7.8, 27.0], [7.9, 27.0], [8.0, 27.0], [8.1, 27.0], [8.2, 27.0], [8.3, 27.0], [8.4, 27.0], [8.5, 27.0], [8.6, 27.0], [8.7, 27.0], [8.8, 27.0], [8.9, 27.0], [9.0, 27.0], [9.1, 27.0], [9.2, 27.0], [9.3, 27.0], [9.4, 27.0], [9.5, 27.0], [9.6, 27.0], [9.7, 27.0], [9.8, 27.0], [9.9, 27.0], [10.0, 27.0], [10.1, 27.0], [10.2, 27.0], [10.3, 27.0], [10.4, 27.0], [10.5, 27.0], [10.6, 27.0], [10.7, 27.0], [10.8, 27.0], [10.9, 27.0], [11.0, 27.0], [11.1, 27.0], [11.2, 27.0], [11.3, 27.0], [11.4, 27.0], [11.5, 27.0], [11.6, 27.0], [11.7, 27.0], [11.8, 27.0], [11.9, 27.0], [12.0, 27.0], [12.1, 27.0], [12.2, 27.0], [12.3, 27.0], [12.4, 27.0], [12.5, 27.0], [12.6, 27.0], [12.7, 27.0], [12.8, 27.0], [12.9, 27.0], [13.0, 27.0], [13.1, 27.0], [13.2, 27.0], [13.3, 27.0], [13.4, 27.0], [13.5, 27.0], [13.6, 27.0], [13.7, 27.0], [13.8, 27.0], [13.9, 27.0], [14.0, 27.0], [14.1, 27.0], [14.2, 27.0], [14.3, 27.0], [14.4, 27.0], [14.5, 27.0], [14.6, 27.0], [14.7, 27.0], [14.8, 27.0], [14.9, 27.0], [15.0, 27.0], [15.1, 27.0], [15.2, 27.0], [15.3, 27.0], [15.4, 27.0], [15.5, 27.0], [15.6, 27.0], [15.7, 27.0], [15.8, 27.0], [15.9, 27.0], [16.0, 27.0], [16.1, 28.0], [16.2, 28.0], [16.3, 28.0], [16.4, 28.0], [16.5, 28.0], [16.6, 28.0], [16.7, 28.0], [16.8, 28.0], [16.9, 28.0], [17.0, 28.0], [17.1, 28.0], [17.2, 28.0], [17.3, 28.0], [17.4, 28.0], [17.5, 28.0], [17.6, 28.0], [17.7, 28.0], [17.8, 28.0], [17.9, 28.0], [18.0, 28.0], [18.1, 28.0], [18.2, 28.0], [18.3, 28.0], [18.4, 28.0], [18.5, 28.0], [18.6, 28.0], [18.7, 28.0], [18.8, 28.0], [18.9, 28.0], [19.0, 28.0], [19.1, 28.0], [19.2, 28.0], [19.3, 28.0], [19.4, 28.0], [19.5, 28.0], [19.6, 28.0], [19.7, 28.0], [19.8, 28.0], [19.9, 28.0], [20.0, 28.0], [20.1, 28.0], [20.2, 28.0], [20.3, 28.0], [20.4, 28.0], [20.5, 28.0], [20.6, 28.0], [20.7, 28.0], [20.8, 28.0], [20.9, 28.0], [21.0, 28.0], [21.1, 28.0], [21.2, 28.0], [21.3, 28.0], [21.4, 28.0], [21.5, 28.0], [21.6, 28.0], [21.7, 28.0], [21.8, 28.0], [21.9, 28.0], [22.0, 28.0], [22.1, 28.0], [22.2, 28.0], [22.3, 28.0], [22.4, 28.0], [22.5, 28.0], [22.6, 28.0], [22.7, 28.0], [22.8, 28.0], [22.9, 28.0], [23.0, 28.0], [23.1, 28.0], [23.2, 28.0], [23.3, 28.0], [23.4, 28.0], [23.5, 28.0], [23.6, 28.0], [23.7, 28.0], [23.8, 28.0], [23.9, 28.0], [24.0, 28.0], [24.1, 28.0], [24.2, 28.0], [24.3, 28.0], [24.4, 28.0], [24.5, 28.0], [24.6, 28.0], [24.7, 28.0], [24.8, 28.0], [24.9, 28.0], [25.0, 28.0], [25.1, 28.0], [25.2, 28.0], [25.3, 28.0], [25.4, 28.0], [25.5, 28.0], [25.6, 28.0], [25.7, 28.0], [25.8, 28.0], [25.9, 28.0], [26.0, 28.0], [26.1, 28.0], [26.2, 28.0], [26.3, 28.0], [26.4, 28.0], [26.5, 28.0], [26.6, 28.0], [26.7, 28.0], [26.8, 28.0], [26.9, 28.0], [27.0, 28.0], [27.1, 28.0], [27.2, 28.0], [27.3, 28.0], [27.4, 28.0], [27.5, 28.0], [27.6, 28.0], [27.7, 28.0], [27.8, 28.0], [27.9, 28.0], [28.0, 28.0], [28.1, 28.0], [28.2, 28.0], [28.3, 28.0], [28.4, 28.0], [28.5, 28.0], [28.6, 28.0], [28.7, 28.0], [28.8, 28.0], [28.9, 28.0], [29.0, 28.0], [29.1, 28.0], [29.2, 28.0], [29.3, 28.0], [29.4, 28.0], [29.5, 28.0], [29.6, 28.0], [29.7, 28.0], [29.8, 28.0], [29.9, 28.0], [30.0, 28.0], [30.1, 28.0], [30.2, 28.0], [30.3, 28.0], [30.4, 28.0], [30.5, 28.0], [30.6, 28.0], [30.7, 28.0], [30.8, 28.0], [30.9, 28.0], [31.0, 28.0], [31.1, 28.0], [31.2, 28.0], [31.3, 28.0], [31.4, 28.0], [31.5, 28.0], [31.6, 28.0], [31.7, 28.0], [31.8, 28.0], [31.9, 28.0], [32.0, 28.0], [32.1, 28.0], [32.2, 28.0], [32.3, 28.0], [32.4, 28.0], [32.5, 28.0], [32.6, 28.0], [32.7, 28.0], [32.8, 28.0], [32.9, 28.0], [33.0, 28.0], [33.1, 28.0], [33.2, 28.0], [33.3, 28.0], [33.4, 28.0], [33.5, 28.0], [33.6, 28.0], [33.7, 28.0], [33.8, 28.0], [33.9, 28.0], [34.0, 28.0], [34.1, 28.0], [34.2, 28.0], [34.3, 28.0], [34.4, 28.0], [34.5, 28.0], [34.6, 28.0], [34.7, 28.0], [34.8, 28.0], [34.9, 28.0], [35.0, 28.0], [35.1, 28.0], [35.2, 28.0], [35.3, 28.0], [35.4, 28.0], [35.5, 28.0], [35.6, 28.0], [35.7, 28.0], [35.8, 28.0], [35.9, 28.0], [36.0, 28.0], [36.1, 28.0], [36.2, 28.0], [36.3, 28.0], [36.4, 28.0], [36.5, 28.0], [36.6, 28.0], [36.7, 29.0], [36.8, 29.0], [36.9, 29.0], [37.0, 29.0], [37.1, 29.0], [37.2, 29.0], [37.3, 29.0], [37.4, 29.0], [37.5, 29.0], [37.6, 29.0], [37.7, 29.0], [37.8, 29.0], [37.9, 29.0], [38.0, 29.0], [38.1, 29.0], [38.2, 29.0], [38.3, 29.0], [38.4, 29.0], [38.5, 29.0], [38.6, 29.0], [38.7, 29.0], [38.8, 29.0], [38.9, 29.0], [39.0, 29.0], [39.1, 29.0], [39.2, 29.0], [39.3, 29.0], [39.4, 29.0], [39.5, 29.0], [39.6, 29.0], [39.7, 29.0], [39.8, 29.0], [39.9, 29.0], [40.0, 29.0], [40.1, 29.0], [40.2, 29.0], [40.3, 29.0], [40.4, 29.0], [40.5, 29.0], [40.6, 29.0], [40.7, 29.0], [40.8, 29.0], [40.9, 29.0], [41.0, 29.0], [41.1, 29.0], [41.2, 29.0], [41.3, 29.0], [41.4, 29.0], [41.5, 29.0], [41.6, 29.0], [41.7, 29.0], [41.8, 29.0], [41.9, 29.0], [42.0, 29.0], [42.1, 29.0], [42.2, 29.0], [42.3, 29.0], [42.4, 29.0], [42.5, 29.0], [42.6, 29.0], [42.7, 29.0], [42.8, 29.0], [42.9, 29.0], [43.0, 29.0], [43.1, 29.0], [43.2, 29.0], [43.3, 29.0], [43.4, 29.0], [43.5, 29.0], [43.6, 29.0], [43.7, 29.0], [43.8, 29.0], [43.9, 29.0], [44.0, 29.0], [44.1, 29.0], [44.2, 29.0], [44.3, 29.0], [44.4, 29.0], [44.5, 29.0], [44.6, 29.0], [44.7, 29.0], [44.8, 29.0], [44.9, 29.0], [45.0, 29.0], [45.1, 29.0], [45.2, 29.0], [45.3, 29.0], [45.4, 29.0], [45.5, 29.0], [45.6, 29.0], [45.7, 29.0], [45.8, 29.0], [45.9, 29.0], [46.0, 29.0], [46.1, 29.0], [46.2, 29.0], [46.3, 29.0], [46.4, 29.0], [46.5, 29.0], [46.6, 29.0], [46.7, 29.0], [46.8, 29.0], [46.9, 29.0], [47.0, 29.0], [47.1, 30.0], [47.2, 30.0], [47.3, 30.0], [47.4, 30.0], [47.5, 30.0], [47.6, 30.0], [47.7, 30.0], [47.8, 30.0], [47.9, 30.0], [48.0, 30.0], [48.1, 30.0], [48.2, 30.0], [48.3, 30.0], [48.4, 30.0], [48.5, 30.0], [48.6, 30.0], [48.7, 30.0], [48.8, 30.0], [48.9, 30.0], [49.0, 30.0], [49.1, 30.0], [49.2, 30.0], [49.3, 30.0], [49.4, 30.0], [49.5, 30.0], [49.6, 30.0], [49.7, 30.0], [49.8, 30.0], [49.9, 30.0], [50.0, 30.0], [50.1, 30.0], [50.2, 30.0], [50.3, 30.0], [50.4, 30.0], [50.5, 30.0], [50.6, 30.0], [50.7, 30.0], [50.8, 30.0], [50.9, 30.0], [51.0, 30.0], [51.1, 30.0], [51.2, 30.0], [51.3, 30.0], [51.4, 30.0], [51.5, 30.0], [51.6, 30.0], [51.7, 31.0], [51.8, 31.0], [51.9, 31.0], [52.0, 32.0], [52.1, 32.0], [52.2, 35.0], [52.3, 35.0], [52.4, 53.0], [52.5, 53.0], [52.6, 53.0], [52.7, 54.0], [52.8, 54.0], [52.9, 54.0], [53.0, 54.0], [53.1, 54.0], [53.2, 54.0], [53.3, 54.0], [53.4, 54.0], [53.5, 54.0], [53.6, 54.0], [53.7, 54.0], [53.8, 54.0], [53.9, 54.0], [54.0, 54.0], [54.1, 55.0], [54.2, 55.0], [54.3, 55.0], [54.4, 55.0], [54.5, 55.0], [54.6, 55.0], [54.7, 55.0], [54.8, 55.0], [54.9, 55.0], [55.0, 55.0], [55.1, 55.0], [55.2, 55.0], [55.3, 55.0], [55.4, 55.0], [55.5, 55.0], [55.6, 55.0], [55.7, 55.0], [55.8, 55.0], [55.9, 55.0], [56.0, 55.0], [56.1, 55.0], [56.2, 55.0], [56.3, 55.0], [56.4, 55.0], [56.5, 55.0], [56.6, 55.0], [56.7, 55.0], [56.8, 55.0], [56.9, 55.0], [57.0, 55.0], [57.1, 55.0], [57.2, 55.0], [57.3, 55.0], [57.4, 55.0], [57.5, 55.0], [57.6, 55.0], [57.7, 55.0], [57.8, 55.0], [57.9, 55.0], [58.0, 55.0], [58.1, 55.0], [58.2, 55.0], [58.3, 55.0], [58.4, 55.0], [58.5, 55.0], [58.6, 55.0], [58.7, 55.0], [58.8, 55.0], [58.9, 55.0], [59.0, 55.0], [59.1, 55.0], [59.2, 55.0], [59.3, 55.0], [59.4, 55.0], [59.5, 55.0], [59.6, 55.0], [59.7, 55.0], [59.8, 55.0], [59.9, 55.0], [60.0, 56.0], [60.1, 56.0], [60.2, 56.0], [60.3, 56.0], [60.4, 56.0], [60.5, 56.0], [60.6, 56.0], [60.7, 56.0], [60.8, 56.0], [60.9, 56.0], [61.0, 56.0], [61.1, 56.0], [61.2, 56.0], [61.3, 56.0], [61.4, 56.0], [61.5, 56.0], [61.6, 56.0], [61.7, 56.0], [61.8, 56.0], [61.9, 56.0], [62.0, 56.0], [62.1, 56.0], [62.2, 56.0], [62.3, 56.0], [62.4, 56.0], [62.5, 56.0], [62.6, 56.0], [62.7, 56.0], [62.8, 56.0], [62.9, 56.0], [63.0, 56.0], [63.1, 56.0], [63.2, 56.0], [63.3, 56.0], [63.4, 56.0], [63.5, 56.0], [63.6, 56.0], [63.7, 56.0], [63.8, 56.0], [63.9, 56.0], [64.0, 56.0], [64.1, 56.0], [64.2, 56.0], [64.3, 56.0], [64.4, 56.0], [64.5, 56.0], [64.6, 56.0], [64.7, 56.0], [64.8, 56.0], [64.9, 56.0], [65.0, 56.0], [65.1, 56.0], [65.2, 56.0], [65.3, 56.0], [65.4, 56.0], [65.5, 56.0], [65.6, 56.0], [65.7, 56.0], [65.8, 56.0], [65.9, 56.0], [66.0, 56.0], [66.1, 56.0], [66.2, 56.0], [66.3, 56.0], [66.4, 56.0], [66.5, 56.0], [66.6, 56.0], [66.7, 56.0], [66.8, 56.0], [66.9, 56.0], [67.0, 56.0], [67.1, 56.0], [67.2, 56.0], [67.3, 56.0], [67.4, 56.0], [67.5, 56.0], [67.6, 56.0], [67.7, 56.0], [67.8, 56.0], [67.9, 56.0], [68.0, 56.0], [68.1, 56.0], [68.2, 56.0], [68.3, 56.0], [68.4, 56.0], [68.5, 56.0], [68.6, 56.0], [68.7, 56.0], [68.8, 56.0], [68.9, 56.0], [69.0, 56.0], [69.1, 56.0], [69.2, 56.0], [69.3, 56.0], [69.4, 56.0], [69.5, 56.0], [69.6, 56.0], [69.7, 56.0], [69.8, 56.0], [69.9, 56.0], [70.0, 56.0], [70.1, 56.0], [70.2, 56.0], [70.3, 56.0], [70.4, 56.0], [70.5, 56.0], [70.6, 56.0], [70.7, 56.0], [70.8, 56.0], [70.9, 56.0], [71.0, 56.0], [71.1, 56.0], [71.2, 56.0], [71.3, 56.0], [71.4, 56.0], [71.5, 56.0], [71.6, 56.0], [71.7, 56.0], [71.8, 56.0], [71.9, 56.0], [72.0, 56.0], [72.1, 56.0], [72.2, 56.0], [72.3, 56.0], [72.4, 56.0], [72.5, 56.0], [72.6, 56.0], [72.7, 56.0], [72.8, 56.0], [72.9, 56.0], [73.0, 56.0], [73.1, 56.0], [73.2, 56.0], [73.3, 56.0], [73.4, 56.0], [73.5, 56.0], [73.6, 56.0], [73.7, 56.0], [73.8, 56.0], [73.9, 56.0], [74.0, 56.0], [74.1, 56.0], [74.2, 56.0], [74.3, 56.0], [74.4, 57.0], [74.5, 57.0], [74.6, 57.0], [74.7, 57.0], [74.8, 57.0], [74.9, 57.0], [75.0, 57.0], [75.1, 57.0], [75.2, 57.0], [75.3, 57.0], [75.4, 57.0], [75.5, 57.0], [75.6, 57.0], [75.7, 57.0], [75.8, 57.0], [75.9, 57.0], [76.0, 57.0], [76.1, 57.0], [76.2, 57.0], [76.3, 57.0], [76.4, 57.0], [76.5, 57.0], [76.6, 57.0], [76.7, 57.0], [76.8, 57.0], [76.9, 57.0], [77.0, 57.0], [77.1, 57.0], [77.2, 57.0], [77.3, 57.0], [77.4, 57.0], [77.5, 57.0], [77.6, 57.0], [77.7, 57.0], [77.8, 57.0], [77.9, 57.0], [78.0, 57.0], [78.1, 57.0], [78.2, 57.0], [78.3, 57.0], [78.4, 57.0], [78.5, 57.0], [78.6, 57.0], [78.7, 57.0], [78.8, 57.0], [78.9, 57.0], [79.0, 57.0], [79.1, 57.0], [79.2, 57.0], [79.3, 57.0], [79.4, 57.0], [79.5, 57.0], [79.6, 57.0], [79.7, 57.0], [79.8, 57.0], [79.9, 57.0], [80.0, 57.0], [80.1, 57.0], [80.2, 57.0], [80.3, 57.0], [80.4, 57.0], [80.5, 57.0], [80.6, 57.0], [80.7, 57.0], [80.8, 57.0], [80.9, 57.0], [81.0, 57.0], [81.1, 57.0], [81.2, 57.0], [81.3, 57.0], [81.4, 57.0], [81.5, 57.0], [81.6, 57.0], [81.7, 57.0], [81.8, 57.0], [81.9, 57.0], [82.0, 57.0], [82.1, 57.0], [82.2, 57.0], [82.3, 57.0], [82.4, 57.0], [82.5, 57.0], [82.6, 57.0], [82.7, 57.0], [82.8, 57.0], [82.9, 57.0], [83.0, 57.0], [83.1, 57.0], [83.2, 57.0], [83.3, 57.0], [83.4, 57.0], [83.5, 57.0], [83.6, 57.0], [83.7, 57.0], [83.8, 57.0], [83.9, 57.0], [84.0, 57.0], [84.1, 57.0], [84.2, 57.0], [84.3, 57.0], [84.4, 57.0], [84.5, 57.0], [84.6, 57.0], [84.7, 57.0], [84.8, 57.0], [84.9, 57.0], [85.0, 57.0], [85.1, 57.0], [85.2, 57.0], [85.3, 57.0], [85.4, 57.0], [85.5, 57.0], [85.6, 57.0], [85.7, 57.0], [85.8, 57.0], [85.9, 57.0], [86.0, 57.0], [86.1, 57.0], [86.2, 57.0], [86.3, 57.0], [86.4, 57.0], [86.5, 57.0], [86.6, 57.0], [86.7, 57.0], [86.8, 57.0], [86.9, 57.0], [87.0, 57.0], [87.1, 57.0], [87.2, 57.0], [87.3, 57.0], [87.4, 57.0], [87.5, 57.0], [87.6, 57.0], [87.7, 57.0], [87.8, 57.0], [87.9, 58.0], [88.0, 58.0], [88.1, 58.0], [88.2, 58.0], [88.3, 58.0], [88.4, 58.0], [88.5, 58.0], [88.6, 58.0], [88.7, 58.0], [88.8, 58.0], [88.9, 58.0], [89.0, 58.0], [89.1, 58.0], [89.2, 58.0], [89.3, 58.0], [89.4, 58.0], [89.5, 58.0], [89.6, 58.0], [89.7, 58.0], [89.8, 58.0], [89.9, 58.0], [90.0, 58.0], [90.1, 58.0], [90.2, 58.0], [90.3, 58.0], [90.4, 58.0], [90.5, 58.0], [90.6, 58.0], [90.7, 58.0], [90.8, 58.0], [90.9, 58.0], [91.0, 58.0], [91.1, 58.0], [91.2, 58.0], [91.3, 58.0], [91.4, 58.0], [91.5, 58.0], [91.6, 58.0], [91.7, 58.0], [91.8, 58.0], [91.9, 58.0], [92.0, 58.0], [92.1, 58.0], [92.2, 58.0], [92.3, 58.0], [92.4, 58.0], [92.5, 58.0], [92.6, 58.0], [92.7, 58.0], [92.8, 58.0], [92.9, 58.0], [93.0, 58.0], [93.1, 58.0], [93.2, 58.0], [93.3, 58.0], [93.4, 58.0], [93.5, 58.0], [93.6, 58.0], [93.7, 58.0], [93.8, 58.0], [93.9, 58.0], [94.0, 58.0], [94.1, 58.0], [94.2, 58.0], [94.3, 58.0], [94.4, 58.0], [94.5, 58.0], [94.6, 58.0], [94.7, 58.0], [94.8, 58.0], [94.9, 58.0], [95.0, 58.0], [95.1, 58.0], [95.2, 58.0], [95.3, 58.0], [95.4, 58.0], [95.5, 58.0], [95.6, 58.0], [95.7, 59.0], [95.8, 59.0], [95.9, 59.0], [96.0, 59.0], [96.1, 59.0], [96.2, 59.0], [96.3, 59.0], [96.4, 59.0], [96.5, 59.0], [96.6, 59.0], [96.7, 59.0], [96.8, 59.0], [96.9, 59.0], [97.0, 59.0], [97.1, 59.0], [97.2, 59.0], [97.3, 59.0], [97.4, 59.0], [97.5, 59.0], [97.6, 59.0], [97.7, 59.0], [97.8, 59.0], [97.9, 59.0], [98.0, 59.0], [98.1, 59.0], [98.2, 59.0], [98.3, 60.0], [98.4, 60.0], [98.5, 60.0], [98.6, 60.0], [98.7, 60.0], [98.8, 60.0], [98.9, 60.0], [99.0, 60.0], [99.1, 60.0], [99.2, 60.0], [99.3, 61.0], [99.4, 61.0], [99.5, 61.0], [99.6, 62.0], [99.7, 63.0], [99.8, 65.0], [99.9, 65.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 81.0], [0.1, 82.0], [0.2, 82.0], [0.3, 82.0], [0.4, 82.0], [0.5, 82.0], [0.6, 82.0], [0.7, 82.0], [0.8, 82.0], [0.9, 82.0], [1.0, 82.0], [1.1, 82.0], [1.2, 82.0], [1.3, 82.0], [1.4, 82.0], [1.5, 82.0], [1.6, 82.0], [1.7, 82.0], [1.8, 83.0], [1.9, 83.0], [2.0, 83.0], [2.1, 83.0], [2.2, 83.0], [2.3, 83.0], [2.4, 83.0], [2.5, 83.0], [2.6, 83.0], [2.7, 83.0], [2.8, 83.0], [2.9, 83.0], [3.0, 83.0], [3.1, 83.0], [3.2, 83.0], [3.3, 83.0], [3.4, 83.0], [3.5, 83.0], [3.6, 83.0], [3.7, 83.0], [3.8, 83.0], [3.9, 83.0], [4.0, 83.0], [4.1, 83.0], [4.2, 83.0], [4.3, 83.0], [4.4, 83.0], [4.5, 83.0], [4.6, 83.0], [4.7, 83.0], [4.8, 83.0], [4.9, 83.0], [5.0, 83.0], [5.1, 83.0], [5.2, 83.0], [5.3, 83.0], [5.4, 83.0], [5.5, 83.0], [5.6, 83.0], [5.7, 83.0], [5.8, 83.0], [5.9, 83.0], [6.0, 83.0], [6.1, 83.0], [6.2, 83.0], [6.3, 83.0], [6.4, 83.0], [6.5, 83.0], [6.6, 83.0], [6.7, 83.0], [6.8, 83.0], [6.9, 83.0], [7.0, 83.0], [7.1, 83.0], [7.2, 83.0], [7.3, 83.0], [7.4, 83.0], [7.5, 83.0], [7.6, 83.0], [7.7, 83.0], [7.8, 83.0], [7.9, 83.0], [8.0, 83.0], [8.1, 83.0], [8.2, 83.0], [8.3, 83.0], [8.4, 83.0], [8.5, 83.0], [8.6, 83.0], [8.7, 83.0], [8.8, 83.0], [8.9, 83.0], [9.0, 83.0], [9.1, 83.0], [9.2, 83.0], [9.3, 83.0], [9.4, 83.0], [9.5, 83.0], [9.6, 83.0], [9.7, 83.0], [9.8, 83.0], [9.9, 83.0], [10.0, 83.0], [10.1, 83.0], [10.2, 83.0], [10.3, 83.0], [10.4, 83.0], [10.5, 83.0], [10.6, 83.0], [10.7, 83.0], [10.8, 83.0], [10.9, 83.0], [11.0, 83.0], [11.1, 83.0], [11.2, 83.0], [11.3, 83.0], [11.4, 83.0], [11.5, 83.0], [11.6, 83.0], [11.7, 83.0], [11.8, 83.0], [11.9, 83.0], [12.0, 83.0], [12.1, 83.0], [12.2, 83.0], [12.3, 83.0], [12.4, 83.0], [12.5, 83.0], [12.6, 83.0], [12.7, 83.0], [12.8, 84.0], [12.9, 84.0], [13.0, 84.0], [13.1, 84.0], [13.2, 84.0], [13.3, 84.0], [13.4, 84.0], [13.5, 84.0], [13.6, 84.0], [13.7, 84.0], [13.8, 84.0], [13.9, 84.0], [14.0, 84.0], [14.1, 84.0], [14.2, 84.0], [14.3, 84.0], [14.4, 84.0], [14.5, 84.0], [14.6, 84.0], [14.7, 84.0], [14.8, 84.0], [14.9, 84.0], [15.0, 84.0], [15.1, 84.0], [15.2, 84.0], [15.3, 84.0], [15.4, 84.0], [15.5, 84.0], [15.6, 84.0], [15.7, 84.0], [15.8, 84.0], [15.9, 84.0], [16.0, 84.0], [16.1, 84.0], [16.2, 84.0], [16.3, 84.0], [16.4, 84.0], [16.5, 84.0], [16.6, 84.0], [16.7, 84.0], [16.8, 84.0], [16.9, 84.0], [17.0, 84.0], [17.1, 84.0], [17.2, 84.0], [17.3, 84.0], [17.4, 84.0], [17.5, 84.0], [17.6, 84.0], [17.7, 84.0], [17.8, 84.0], [17.9, 84.0], [18.0, 84.0], [18.1, 84.0], [18.2, 84.0], [18.3, 84.0], [18.4, 84.0], [18.5, 84.0], [18.6, 84.0], [18.7, 84.0], [18.8, 84.0], [18.9, 84.0], [19.0, 84.0], [19.1, 84.0], [19.2, 84.0], [19.3, 84.0], [19.4, 84.0], [19.5, 84.0], [19.6, 84.0], [19.7, 84.0], [19.8, 84.0], [19.9, 84.0], [20.0, 84.0], [20.1, 84.0], [20.2, 84.0], [20.3, 84.0], [20.4, 84.0], [20.5, 84.0], [20.6, 84.0], [20.7, 84.0], [20.8, 84.0], [20.9, 84.0], [21.0, 84.0], [21.1, 84.0], [21.2, 84.0], [21.3, 84.0], [21.4, 84.0], [21.5, 84.0], [21.6, 84.0], [21.7, 84.0], [21.8, 85.0], [21.9, 85.0], [22.0, 85.0], [22.1, 85.0], [22.2, 85.0], [22.3, 85.0], [22.4, 85.0], [22.5, 85.0], [22.6, 85.0], [22.7, 85.0], [22.8, 85.0], [22.9, 85.0], [23.0, 85.0], [23.1, 85.0], [23.2, 85.0], [23.3, 85.0], [23.4, 85.0], [23.5, 85.0], [23.6, 85.0], [23.7, 85.0], [23.8, 85.0], [23.9, 85.0], [24.0, 85.0], [24.1, 85.0], [24.2, 85.0], [24.3, 85.0], [24.4, 85.0], [24.5, 85.0], [24.6, 85.0], [24.7, 85.0], [24.8, 85.0], [24.9, 85.0], [25.0, 85.0], [25.1, 85.0], [25.2, 85.0], [25.3, 85.0], [25.4, 85.0], [25.5, 85.0], [25.6, 85.0], [25.7, 85.0], [25.8, 85.0], [25.9, 85.0], [26.0, 85.0], [26.1, 85.0], [26.2, 85.0], [26.3, 85.0], [26.4, 85.0], [26.5, 85.0], [26.6, 85.0], [26.7, 85.0], [26.8, 85.0], [26.9, 85.0], [27.0, 85.0], [27.1, 85.0], [27.2, 85.0], [27.3, 85.0], [27.4, 85.0], [27.5, 85.0], [27.6, 85.0], [27.7, 85.0], [27.8, 85.0], [27.9, 85.0], [28.0, 85.0], [28.1, 85.0], [28.2, 85.0], [28.3, 85.0], [28.4, 85.0], [28.5, 85.0], [28.6, 85.0], [28.7, 85.0], [28.8, 85.0], [28.9, 85.0], [29.0, 85.0], [29.1, 85.0], [29.2, 85.0], [29.3, 85.0], [29.4, 85.0], [29.5, 85.0], [29.6, 85.0], [29.7, 85.0], [29.8, 85.0], [29.9, 85.0], [30.0, 85.0], [30.1, 85.0], [30.2, 85.0], [30.3, 85.0], [30.4, 85.0], [30.5, 85.0], [30.6, 85.0], [30.7, 85.0], [30.8, 85.0], [30.9, 85.0], [31.0, 85.0], [31.1, 85.0], [31.2, 85.0], [31.3, 85.0], [31.4, 85.0], [31.5, 85.0], [31.6, 86.0], [31.7, 86.0], [31.8, 86.0], [31.9, 86.0], [32.0, 86.0], [32.1, 86.0], [32.2, 86.0], [32.3, 86.0], [32.4, 86.0], [32.5, 86.0], [32.6, 86.0], [32.7, 86.0], [32.8, 86.0], [32.9, 86.0], [33.0, 86.0], [33.1, 86.0], [33.2, 86.0], [33.3, 86.0], [33.4, 86.0], [33.5, 86.0], [33.6, 86.0], [33.7, 86.0], [33.8, 86.0], [33.9, 86.0], [34.0, 86.0], [34.1, 86.0], [34.2, 86.0], [34.3, 86.0], [34.4, 86.0], [34.5, 86.0], [34.6, 86.0], [34.7, 86.0], [34.8, 86.0], [34.9, 86.0], [35.0, 86.0], [35.1, 86.0], [35.2, 86.0], [35.3, 86.0], [35.4, 86.0], [35.5, 86.0], [35.6, 86.0], [35.7, 86.0], [35.8, 86.0], [35.9, 86.0], [36.0, 86.0], [36.1, 86.0], [36.2, 86.0], [36.3, 86.0], [36.4, 86.0], [36.5, 86.0], [36.6, 86.0], [36.7, 86.0], [36.8, 86.0], [36.9, 86.0], [37.0, 86.0], [37.1, 86.0], [37.2, 86.0], [37.3, 86.0], [37.4, 87.0], [37.5, 87.0], [37.6, 87.0], [37.7, 87.0], [37.8, 87.0], [37.9, 87.0], [38.0, 87.0], [38.1, 87.0], [38.2, 87.0], [38.3, 87.0], [38.4, 87.0], [38.5, 87.0], [38.6, 87.0], [38.7, 87.0], [38.8, 87.0], [38.9, 87.0], [39.0, 87.0], [39.1, 87.0], [39.2, 87.0], [39.3, 87.0], [39.4, 87.0], [39.5, 87.0], [39.6, 87.0], [39.7, 87.0], [39.8, 87.0], [39.9, 87.0], [40.0, 87.0], [40.1, 87.0], [40.2, 87.0], [40.3, 87.0], [40.4, 87.0], [40.5, 87.0], [40.6, 87.0], [40.7, 87.0], [40.8, 87.0], [40.9, 87.0], [41.0, 87.0], [41.1, 88.0], [41.2, 88.0], [41.3, 88.0], [41.4, 88.0], [41.5, 88.0], [41.6, 88.0], [41.7, 88.0], [41.8, 88.0], [41.9, 88.0], [42.0, 88.0], [42.1, 88.0], [42.2, 88.0], [42.3, 88.0], [42.4, 88.0], [42.5, 88.0], [42.6, 89.0], [42.7, 89.0], [42.8, 89.0], [42.9, 89.0], [43.0, 89.0], [43.1, 89.0], [43.2, 89.0], [43.3, 89.0], [43.4, 89.0], [43.5, 89.0], [43.6, 89.0], [43.7, 90.0], [43.8, 90.0], [43.9, 90.0], [44.0, 90.0], [44.1, 90.0], [44.2, 226.0], [44.3, 226.0], [44.4, 227.0], [44.5, 227.0], [44.6, 227.0], [44.7, 228.0], [44.8, 228.0], [44.9, 228.0], [45.0, 229.0], [45.1, 230.0], [45.2, 230.0], [45.3, 231.0], [45.4, 231.0], [45.5, 231.0], [45.6, 231.0], [45.7, 231.0], [45.8, 231.0], [45.9, 231.0], [46.0, 232.0], [46.1, 232.0], [46.2, 232.0], [46.3, 232.0], [46.4, 232.0], [46.5, 233.0], [46.6, 233.0], [46.7, 233.0], [46.8, 233.0], [46.9, 233.0], [47.0, 233.0], [47.1, 233.0], [47.2, 234.0], [47.3, 234.0], [47.4, 234.0], [47.5, 234.0], [47.6, 234.0], [47.7, 234.0], [47.8, 234.0], [47.9, 234.0], [48.0, 234.0], [48.1, 234.0], [48.2, 234.0], [48.3, 234.0], [48.4, 234.0], [48.5, 235.0], [48.6, 235.0], [48.7, 235.0], [48.8, 235.0], [48.9, 235.0], [49.0, 235.0], [49.1, 235.0], [49.2, 235.0], [49.3, 235.0], [49.4, 236.0], [49.5, 236.0], [49.6, 236.0], [49.7, 236.0], [49.8, 236.0], [49.9, 236.0], [50.0, 236.0], [50.1, 236.0], [50.2, 237.0], [50.3, 237.0], [50.4, 237.0], [50.5, 237.0], [50.6, 237.0], [50.7, 237.0], [50.8, 237.0], [50.9, 237.0], [51.0, 237.0], [51.1, 238.0], [51.2, 238.0], [51.3, 238.0], [51.4, 238.0], [51.5, 239.0], [51.6, 239.0], [51.7, 240.0], [51.8, 240.0], [51.9, 240.0], [52.0, 241.0], [52.1, 241.0], [52.2, 243.0], [52.3, 432.0], [52.4, 434.0], [52.5, 434.0], [52.6, 437.0], [52.7, 437.0], [52.8, 442.0], [52.9, 443.0], [53.0, 446.0], [53.1, 451.0], [53.2, 495.0], [53.3, 539.0], [53.4, 569.0], [53.5, 688.0], [53.6, 779.0], [53.7, 781.0], [53.8, 782.0], [53.9, 782.0], [54.0, 783.0], [54.1, 785.0], [54.2, 785.0], [54.3, 787.0], [54.4, 787.0], [54.5, 790.0], [54.6, 790.0], [54.7, 790.0], [54.8, 793.0], [54.9, 923.0], [55.0, 936.0], [55.1, 941.0], [55.2, 962.0], [55.3, 974.0], [55.4, 1062.0], [55.5, 1075.0], [55.6, 1085.0], [55.7, 1405.0], [55.8, 1425.0], [55.9, 1425.0], [56.0, 1429.0], [56.1, 1433.0], [56.2, 1436.0], [56.3, 1436.0], [56.4, 1436.0], [56.5, 1436.0], [56.6, 1927.0], [56.7, 1932.0], [56.8, 1938.0], [56.9, 1959.0], [57.0, 2067.0], [57.1, 2282.0], [57.2, 2304.0], [57.3, 2634.0], [57.4, 2681.0], [57.5, 2857.0], [57.6, 2933.0], [57.7, 2940.0], [57.8, 2948.0], [57.9, 3231.0], [58.0, 3437.0], [58.1, 3447.0], [58.2, 3450.0], [58.3, 3453.0], [58.4, 3454.0], [58.5, 3458.0], [58.6, 3586.0], [58.7, 3902.0], [58.8, 3935.0], [58.9, 3944.0], [59.0, 3962.0], [59.1, 4008.0], [59.2, 4072.0], [59.3, 4407.0], [59.4, 4430.0], [59.5, 4448.0], [59.6, 4462.0], [59.7, 4524.0], [59.8, 4935.0], [59.9, 4948.0], [60.0, 4954.0], [60.1, 4965.0], [60.2, 4967.0], [60.3, 5277.0], [60.4, 5365.0], [60.5, 5452.0], [60.6, 5487.0], [60.7, 5488.0], [60.8, 5491.0], [60.9, 5496.0], [61.0, 5502.0], [61.1, 5512.0], [61.2, 5537.0], [61.3, 5538.0], [61.4, 5581.0], [61.5, 5583.0], [61.6, 5598.0], [61.7, 5600.0], [61.8, 5626.0], [61.9, 5633.0], [62.0, 5641.0], [62.1, 5684.0], [62.2, 5709.0], [62.3, 5712.0], [62.4, 5715.0], [62.5, 5723.0], [62.6, 5741.0], [62.7, 5742.0], [62.8, 5744.0], [62.9, 5744.0], [63.0, 5773.0], [63.1, 5821.0], [63.2, 5838.0], [63.3, 5849.0], [63.4, 5850.0], [63.5, 5855.0], [63.6, 5885.0], [63.7, 5886.0], [63.8, 5950.0], [63.9, 5956.0], [64.0, 5959.0], [64.1, 5965.0], [64.2, 5988.0], [64.3, 6038.0], [64.4, 6042.0], [64.5, 6049.0], [64.6, 6058.0], [64.7, 6059.0], [64.8, 6070.0], [64.9, 6090.0], [65.0, 6096.0], [65.1, 6098.0], [65.2, 6135.0], [65.3, 6138.0], [65.4, 6159.0], [65.5, 6163.0], [65.6, 6220.0], [65.7, 6232.0], [65.8, 6297.0], [65.9, 6306.0], [66.0, 6315.0], [66.1, 6317.0], [66.2, 6325.0], [66.3, 6346.0], [66.4, 6365.0], [66.5, 6369.0], [66.6, 6416.0], [66.7, 6488.0], [66.8, 6505.0], [66.9, 6510.0], [67.0, 6514.0], [67.1, 6560.0], [67.2, 6636.0], [67.3, 6785.0], [67.4, 6887.0], [67.5, 6955.0], [67.6, 6960.0], [67.7, 7084.0], [67.8, 7105.0], [67.9, 7148.0], [68.0, 7157.0], [68.1, 7221.0], [68.2, 7254.0], [68.3, 7293.0], [68.4, 7334.0], [68.5, 7366.0], [68.6, 7370.0], [68.7, 7519.0], [68.8, 7645.0], [68.9, 7656.0], [69.0, 7657.0], [69.1, 7659.0], [69.2, 7696.0], [69.3, 7717.0], [69.4, 7786.0], [69.5, 7794.0], [69.6, 7873.0], [69.7, 7945.0], [69.8, 7950.0], [69.9, 8030.0], [70.0, 8184.0], [70.1, 8190.0], [70.2, 8207.0], [70.3, 8208.0], [70.4, 8210.0], [70.5, 8244.0], [70.6, 8289.0], [70.7, 8382.0], [70.8, 8402.0], [70.9, 8402.0], [71.0, 8415.0], [71.1, 8464.0], [71.2, 8505.0], [71.3, 8529.0], [71.4, 8580.0], [71.5, 8596.0], [71.6, 8622.0], [71.7, 8682.0], [71.8, 8691.0], [71.9, 8880.0], [72.0, 8902.0], [72.1, 8916.0], [72.2, 8971.0], [72.3, 8972.0], [72.4, 8996.0], [72.5, 9005.0], [72.6, 9015.0], [72.7, 9052.0], [72.8, 9079.0], [72.9, 9164.0], [73.0, 9198.0], [73.1, 9200.0], [73.2, 9297.0], [73.3, 9309.0], [73.4, 9313.0], [73.5, 9320.0], [73.6, 9335.0], [73.7, 9412.0], [73.8, 9421.0], [73.9, 9441.0], [74.0, 9518.0], [74.1, 9519.0], [74.2, 9586.0], [74.3, 9617.0], [74.4, 9639.0], [74.5, 9677.0], [74.6, 9679.0], [74.7, 9744.0], [74.8, 9747.0], [74.9, 9752.0], [75.0, 9796.0], [75.1, 9798.0], [75.2, 9817.0], [75.3, 9841.0], [75.4, 9849.0], [75.5, 9860.0], [75.6, 9922.0], [75.7, 9945.0], [75.8, 9957.0], [75.9, 9965.0], [76.0, 9967.0], [76.1, 9993.0], [76.2, 10039.0], [76.3, 10040.0], [76.4, 10040.0], [76.5, 10042.0], [76.6, 10054.0], [76.7, 10067.0], [76.8, 10099.0], [76.9, 10103.0], [77.0, 10107.0], [77.1, 10151.0], [77.2, 10160.0], [77.3, 10194.0], [77.4, 10196.0], [77.5, 10201.0], [77.6, 10207.0], [77.7, 10212.0], [77.8, 10214.0], [77.9, 10235.0], [78.0, 10262.0], [78.1, 10276.0], [78.2, 10277.0], [78.3, 10291.0], [78.4, 10303.0], [78.5, 10322.0], [78.6, 10335.0], [78.7, 10376.0], [78.8, 10385.0], [78.9, 10403.0], [79.0, 10418.0], [79.1, 10419.0], [79.2, 10430.0], [79.3, 10445.0], [79.4, 10481.0], [79.5, 10484.0], [79.6, 10516.0], [79.7, 10518.0], [79.8, 10532.0], [79.9, 10542.0], [80.0, 10550.0], [80.1, 10555.0], [80.2, 10556.0], [80.3, 10566.0], [80.4, 10570.0], [80.5, 10576.0], [80.6, 10577.0], [80.7, 10594.0], [80.8, 10603.0], [80.9, 10612.0], [81.0, 10658.0], [81.1, 10670.0], [81.2, 10680.0], [81.3, 10694.0], [81.4, 10696.0], [81.5, 10712.0], [81.6, 10722.0], [81.7, 10742.0], [81.8, 10759.0], [81.9, 10760.0], [82.0, 10771.0], [82.1, 10775.0], [82.2, 10785.0], [82.3, 10800.0], [82.4, 10808.0], [82.5, 10815.0], [82.6, 10817.0], [82.7, 10829.0], [82.8, 10846.0], [82.9, 10850.0], [83.0, 10870.0], [83.1, 10870.0], [83.2, 10875.0], [83.3, 10878.0], [83.4, 10895.0], [83.5, 10896.0], [83.6, 10900.0], [83.7, 10907.0], [83.8, 10911.0], [83.9, 10914.0], [84.0, 10915.0], [84.1, 10929.0], [84.2, 10934.0], [84.3, 10943.0], [84.4, 10952.0], [84.5, 10953.0], [84.6, 10958.0], [84.7, 10976.0], [84.8, 10976.0], [84.9, 10982.0], [85.0, 11005.0], [85.1, 11013.0], [85.2, 11015.0], [85.3, 11016.0], [85.4, 11018.0], [85.5, 11034.0], [85.6, 11053.0], [85.7, 11078.0], [85.8, 11130.0], [85.9, 11162.0], [86.0, 11197.0], [86.1, 11207.0], [86.2, 11213.0], [86.3, 11230.0], [86.4, 11232.0], [86.5, 11246.0], [86.6, 11287.0], [86.7, 11290.0], [86.8, 11294.0], [86.9, 11321.0], [87.0, 11331.0], [87.1, 11346.0], [87.2, 11346.0], [87.3, 11351.0], [87.4, 11374.0], [87.5, 11390.0], [87.6, 11420.0], [87.7, 11423.0], [87.8, 11426.0], [87.9, 11448.0], [88.0, 11453.0], [88.1, 11471.0], [88.2, 11476.0], [88.3, 11501.0], [88.4, 11507.0], [88.5, 11522.0], [88.6, 11530.0], [88.7, 11566.0], [88.8, 11575.0], [88.9, 11592.0], [89.0, 11602.0], [89.1, 11617.0], [89.2, 11629.0], [89.3, 11630.0], [89.4, 11647.0], [89.5, 11648.0], [89.6, 11656.0], [89.7, 11701.0], [89.8, 11756.0], [89.9, 11757.0], [90.0, 11789.0], [90.1, 11797.0], [90.2, 11802.0], [90.3, 11803.0], [90.4, 11824.0], [90.5, 11828.0], [90.6, 11834.0], [90.7, 11843.0], [90.8, 11876.0], [90.9, 11876.0], [91.0, 11912.0], [91.1, 11919.0], [91.2, 11921.0], [91.3, 11934.0], [91.4, 11951.0], [91.5, 11960.0], [91.6, 11966.0], [91.7, 11986.0], [91.8, 12021.0], [91.9, 12026.0], [92.0, 12034.0], [92.1, 12077.0], [92.2, 12079.0], [92.3, 12099.0], [92.4, 12110.0], [92.5, 12114.0], [92.6, 12133.0], [92.7, 12141.0], [92.8, 12178.0], [92.9, 12179.0], [93.0, 12186.0], [93.1, 12204.0], [93.2, 12206.0], [93.3, 12223.0], [93.4, 12230.0], [93.5, 12249.0], [93.6, 12260.0], [93.7, 12296.0], [93.8, 12301.0], [93.9, 12302.0], [94.0, 12324.0], [94.1, 12327.0], [94.2, 12344.0], [94.3, 12345.0], [94.4, 12348.0], [94.5, 12364.0], [94.6, 12393.0], [94.7, 12415.0], [94.8, 12422.0], [94.9, 12422.0], [95.0, 12430.0], [95.1, 12432.0], [95.2, 12432.0], [95.3, 12434.0], [95.4, 12452.0], [95.5, 12468.0], [95.6, 12478.0], [95.7, 12492.0], [95.8, 12493.0], [95.9, 12505.0], [96.0, 12528.0], [96.1, 12588.0], [96.2, 12589.0], [96.3, 12624.0], [96.4, 12640.0], [96.5, 12695.0], [96.6, 12716.0], [96.7, 12733.0], [96.8, 12747.0], [96.9, 12754.0], [97.0, 12806.0], [97.1, 12850.0], [97.2, 12896.0], [97.3, 12923.0], [97.4, 12948.0], [97.5, 12981.0], [97.6, 12997.0], [97.7, 13075.0], [97.8, 13144.0], [97.9, 13194.0], [98.0, 13208.0], [98.1, 13280.0], [98.2, 13423.0], [98.3, 13462.0], [98.4, 13474.0], [98.5, 13474.0], [98.6, 13516.0], [98.7, 13714.0], [98.8, 13769.0], [98.9, 13783.0], [99.0, 13790.0], [99.1, 13847.0], [99.2, 13850.0], [99.3, 13882.0], [99.4, 13910.0], [99.5, 13937.0], [99.6, 13949.0], [99.7, 14176.0], [99.8, 14653.0], [99.9, 14768.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1000.0, "series": [{"data": [[0.0, 522.0], [200.0, 8.0], [300.0, 3.0], [400.0, 1.0], [500.0, 1.0], [700.0, 16.0], [800.0, 2.0], [900.0, 2.0], [1000.0, 1.0], [1200.0, 8.0], [1300.0, 1.0], [1700.0, 3.0], [1800.0, 1.0], [2000.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [2500.0, 2.0], [2700.0, 3.0], [2800.0, 1.0], [3100.0, 1.0], [3300.0, 4.0], [3200.0, 2.0], [3400.0, 1.0], [3700.0, 3.0], [3800.0, 2.0], [3900.0, 1.0], [4300.0, 3.0], [4200.0, 2.0], [4800.0, 3.0], [4700.0, 1.0], [4900.0, 1.0], [5100.0, 1.0], [5300.0, 7.0], [5200.0, 1.0], [5400.0, 9.0], [5500.0, 9.0], [5600.0, 3.0], [5700.0, 4.0], [5800.0, 8.0], [5900.0, 9.0], [6100.0, 6.0], [6000.0, 4.0], [6300.0, 4.0], [6200.0, 4.0], [6600.0, 1.0], [6400.0, 2.0], [6800.0, 2.0], [6700.0, 1.0], [6900.0, 2.0], [7000.0, 3.0], [7100.0, 3.0], [7200.0, 1.0], [7300.0, 2.0], [7400.0, 1.0], [7500.0, 5.0], [7600.0, 2.0], [7800.0, 2.0], [7700.0, 2.0], [8000.0, 6.0], [8100.0, 1.0], [8400.0, 2.0], [8500.0, 3.0], [8200.0, 4.0], [8300.0, 3.0], [8700.0, 3.0], [8800.0, 4.0], [9100.0, 4.0], [9000.0, 3.0], [9200.0, 4.0], [8900.0, 2.0], [9500.0, 5.0], [9600.0, 5.0], [9300.0, 3.0], [9700.0, 3.0], [9400.0, 2.0], [9900.0, 7.0], [10100.0, 9.0], [9800.0, 7.0], [10200.0, 6.0], [10000.0, 7.0], [10500.0, 9.0], [10700.0, 16.0], [10300.0, 6.0], [10400.0, 9.0], [10600.0, 11.0], [11100.0, 6.0], [11200.0, 8.0], [10800.0, 11.0], [10900.0, 4.0], [11000.0, 6.0], [11400.0, 9.0], [11700.0, 6.0], [11600.0, 10.0], [11300.0, 7.0], [11500.0, 2.0], [11900.0, 9.0], [12200.0, 11.0], [12100.0, 8.0], [11800.0, 6.0], [12000.0, 5.0], [12300.0, 9.0], [12600.0, 2.0], [12500.0, 4.0], [12700.0, 4.0], [12400.0, 3.0], [12800.0, 2.0], [13300.0, 3.0], [13100.0, 2.0], [12900.0, 2.0], [13000.0, 2.0], [13800.0, 2.0], [13700.0, 5.0], [13400.0, 2.0], [13600.0, 2.0], [13500.0, 1.0], [14000.0, 1.0], [14500.0, 1.0], [14600.0, 1.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 998.0], [100.0, 2.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 1000.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 442.0], [200.0, 80.0], [400.0, 10.0], [500.0, 2.0], [600.0, 1.0], [700.0, 13.0], [900.0, 5.0], [1000.0, 3.0], [1400.0, 9.0], [1900.0, 4.0], [2000.0, 1.0], [2200.0, 1.0], [2300.0, 1.0], [2600.0, 2.0], [2800.0, 1.0], [2900.0, 3.0], [3200.0, 1.0], [3400.0, 6.0], [3500.0, 1.0], [3900.0, 4.0], [4000.0, 2.0], [4400.0, 4.0], [4500.0, 1.0], [4900.0, 5.0], [5200.0, 1.0], [5300.0, 1.0], [5400.0, 5.0], [5500.0, 7.0], [5600.0, 5.0], [5700.0, 9.0], [5800.0, 7.0], [5900.0, 5.0], [6000.0, 9.0], [6100.0, 4.0], [6300.0, 7.0], [6200.0, 3.0], [6500.0, 4.0], [6400.0, 3.0], [6600.0, 1.0], [6900.0, 2.0], [6800.0, 1.0], [6700.0, 1.0], [7100.0, 3.0], [7000.0, 1.0], [7200.0, 3.0], [7300.0, 3.0], [7500.0, 1.0], [7600.0, 5.0], [7900.0, 2.0], [7700.0, 3.0], [7800.0, 1.0], [8000.0, 1.0], [8100.0, 2.0], [8500.0, 4.0], [8600.0, 3.0], [8400.0, 4.0], [8300.0, 1.0], [8200.0, 5.0], [8900.0, 5.0], [9000.0, 4.0], [8800.0, 1.0], [9100.0, 2.0], [9200.0, 2.0], [9300.0, 4.0], [9600.0, 4.0], [9700.0, 5.0], [9400.0, 3.0], [9500.0, 3.0], [10000.0, 7.0], [10200.0, 9.0], [10100.0, 6.0], [9900.0, 6.0], [9800.0, 4.0], [10600.0, 7.0], [10700.0, 8.0], [10300.0, 5.0], [10400.0, 7.0], [10500.0, 12.0], [10900.0, 14.0], [11000.0, 8.0], [11100.0, 3.0], [11200.0, 8.0], [10800.0, 13.0], [11300.0, 7.0], [11600.0, 7.0], [11400.0, 7.0], [11500.0, 7.0], [11700.0, 5.0], [11900.0, 8.0], [11800.0, 8.0], [12200.0, 7.0], [12100.0, 7.0], [12000.0, 6.0], [12300.0, 9.0], [12400.0, 12.0], [12700.0, 4.0], [12600.0, 3.0], [12500.0, 4.0], [12900.0, 4.0], [13100.0, 2.0], [12800.0, 3.0], [13000.0, 1.0], [13200.0, 2.0], [13400.0, 4.0], [13700.0, 4.0], [13800.0, 3.0], [13500.0, 1.0], [13900.0, 3.0], [14100.0, 1.0], [14600.0, 1.0], [14700.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 14700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 64.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2022.0, "series": [{"data": [[0.0, 2022.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 64.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 870.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1044.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 33.19098143236079, "minX": 1.58202258E12, "maxY": 68.19778188539733, "series": [{"data": [[1.58202264E12, 33.19098143236079], [1.58202258E12, 68.19778188539733]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58202264E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 28.0, "minX": 1.0, "maxY": 9877.142857142857, "series": [{"data": [[2.0, 1785.0], [3.0, 396.0], [4.0, 2553.5], [5.0, 2842.0], [6.0, 1919.0], [7.0, 2289.5], [8.0, 3791.0], [9.0, 2338.0], [10.0, 2971.666666666667], [11.0, 2048.0], [12.0, 1793.5], [13.0, 288.5], [14.0, 4465.0], [15.0, 512.0], [16.0, 3590.7142857142862], [17.0, 3864.0], [18.0, 1815.0], [19.0, 3783.0], [20.0, 3861.0], [21.0, 3089.0], [22.0, 4310.142857142857], [23.0, 3003.666666666667], [24.0, 3955.8571428571427], [25.0, 4537.0], [26.0, 4286.428571428572], [27.0, 3007.8], [28.0, 6094.6], [29.0, 5049.090909090908], [30.0, 4949.666666666667], [31.0, 3901.5], [33.0, 3886.5], [32.0, 6201.5], [35.0, 3966.0], [34.0, 6905.0], [37.0, 6473.6], [36.0, 7597.5], [39.0, 6759.6], [38.0, 7815.5], [41.0, 5846.333333333333], [40.0, 8263.5], [43.0, 8478.363636363638], [42.0, 8958.25], [45.0, 5637.5], [44.0, 9729.857142857143], [46.0, 87.0], [47.0, 5641.333333333333], [48.0, 3782.5], [49.0, 3360.75], [50.0, 2653.0], [51.0, 4965.333333333333], [52.0, 1556.0], [53.0, 3277.7142857142853], [54.0, 1828.6666666666665], [55.0, 1363.2222222222222], [56.0, 1391.0], [57.0, 2156.2727272727275], [58.0, 1555.1428571428573], [59.0, 5315.000000000001], [60.0, 5416.3125], [61.0, 1781.5], [62.0, 2796.535714285714], [63.0, 1574.3846153846152], [64.0, 951.7948717948718], [65.0, 927.125], [66.0, 4066.777777777778], [67.0, 2028.9310344827588], [68.0, 366.5806451612903], [69.0, 9108.268518518516], [70.0, 1660.84375], [71.0, 6890.196078431373], [72.0, 8437.393258426964], [73.0, 726.0333333333333], [74.0, 4891.531914893616], [75.0, 834.4285714285716], [76.0, 714.1818181818181], [77.0, 28.555555555555557], [78.0, 3251.4615384615386], [79.0, 724.9523809523811], [80.0, 258.10714285714283], [81.0, 305.15384615384613], [82.0, 34.629629629629626], [1.0, 3293.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[61.59900000000004, 4074.1170000000006]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[2.0, 87.0], [3.0, 87.0], [4.0, 59.0], [5.0, 91.0], [6.0, 91.5], [7.0, 89.0], [8.0, 87.0], [9.0, 68.33333333333333], [10.0, 89.33333333333333], [11.0, 91.0], [12.0, 91.0], [13.0, 89.0], [14.0, 80.66666666666667], [15.0, 59.5], [16.0, 54.42857142857143], [17.0, 67.0], [18.0, 86.0], [19.0, 71.71428571428571], [20.0, 88.2], [21.0, 58.5], [22.0, 89.14285714285715], [23.0, 48.66666666666667], [24.0, 90.0], [25.0, 72.57142857142857], [26.0, 90.42857142857143], [27.0, 78.6], [28.0, 91.8], [29.0, 85.0909090909091], [30.0, 90.66666666666667], [31.0, 90.0], [33.0, 88.0], [32.0, 90.5], [35.0, 88.0], [34.0, 89.5], [37.0, 91.4], [36.0, 89.5], [39.0, 78.0], [38.0, 90.0], [41.0, 69.0], [40.0, 90.0], [43.0, 84.45454545454547], [42.0, 89.5], [45.0, 59.75], [44.0, 90.85714285714286], [46.0, 92.0], [47.0, 77.5], [48.0, 58.83333333333333], [49.0, 74.25], [50.0, 60.5], [51.0, 69.55555555555556], [52.0, 37.285714285714285], [53.0, 62.42857142857143], [54.0, 48.83333333333333], [55.0, 48.77777777777778], [56.0, 44.12500000000001], [57.0, 51.18181818181819], [58.0, 45.42857142857143], [59.0, 65.26666666666667], [60.0, 59.875], [61.0, 46.8], [62.0, 49.535714285714285], [63.0, 42.07692307692307], [64.0, 45.33333333333333], [65.0, 39.6875], [66.0, 56.222222222222214], [67.0, 49.44827586206896], [68.0, 37.87096774193549], [69.0, 81.26851851851853], [70.0, 46.28125], [71.0, 68.56862745098039], [72.0, 46.98876404494382], [73.0, 33.933333333333344], [74.0, 47.36170212765957], [75.0, 50.24999999999999], [76.0, 40.0], [77.0, 28.0], [78.0, 60.846153846153854], [79.0, 51.095238095238095], [80.0, 38.857142857142854], [81.0, 35.1923076923077], [82.0, 35.03703703703703], [1.0, 88.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[61.59900000000004, 57.66599999999999]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 55.0], [3.0, 56.0], [4.0, 43.0], [5.0, 61.0], [6.0, 56.5], [7.0, 56.5], [8.0, 57.0], [9.0, 47.0], [10.0, 57.0], [11.0, 55.5], [12.0, 56.0], [13.0, 56.5], [14.0, 51.0], [15.0, 42.0], [16.0, 40.285714285714285], [17.0, 47.666666666666664], [18.0, 57.0], [19.0, 48.142857142857146], [20.0, 56.4], [21.0, 42.0], [22.0, 56.714285714285715], [23.0, 38.666666666666664], [24.0, 55.857142857142854], [25.0, 48.57142857142858], [26.0, 57.00000000000001], [27.0, 50.4], [28.0, 56.4], [29.0, 54.0909090909091], [30.0, 58.0], [31.0, 55.5], [33.0, 55.5], [32.0, 55.5], [35.0, 56.5], [34.0, 57.0], [37.0, 57.6], [36.0, 56.5], [39.0, 52.4], [38.0, 56.5], [41.0, 46.666666666666664], [40.0, 55.0], [43.0, 53.81818181818182], [42.0, 56.25], [45.0, 43.25], [44.0, 56.42857142857143], [46.0, 55.0], [47.0, 50.83333333333333], [48.0, 42.33333333333333], [49.0, 48.25], [50.0, 42.25], [51.0, 47.44444444444444], [52.0, 32.57142857142857], [53.0, 44.57142857142857], [54.0, 36.5], [55.0, 37.222222222222214], [56.0, 34.875], [57.0, 38.18181818181818], [58.0, 35.42857142857142], [59.0, 45.46666666666667], [60.0, 42.5], [61.0, 36.3], [62.0, 37.96428571428572], [63.0, 34.38461538461539], [64.0, 36.02564102564102], [65.0, 33.1875], [66.0, 40.8888888888889], [67.0, 37.93103448275861], [68.0, 32.645161290322584], [69.0, 52.6111111111111], [70.0, 36.4375], [71.0, 47.29411764705884], [72.0, 37.191011235955045], [73.0, 31.200000000000003], [74.0, 37.46808510638297], [75.0, 38.0], [76.0, 33.09090909090909], [77.0, 29.11111111111111], [78.0, 43.61538461538461], [79.0, 38.71428571428571], [80.0, 32.78571428571429], [81.0, 31.076923076923073], [82.0, 31.296296296296294], [1.0, 56.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[61.59900000000004, 41.76299999999996]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 1927.0], [3.0, 539.0], [4.0, 2655.5], [5.0, 2994.5], [6.0, 2067.0], [7.0, 2436.0], [8.0, 3935.0], [9.0, 2453.3333333333335], [10.0, 3118.666666666667], [11.0, 2194.5], [12.0, 1940.5], [13.0, 434.0], [14.0, 4596.666666666666], [15.0, 613.5], [16.0, 3685.4285714285716], [17.0, 3978.6666666666665], [18.0, 1959.0], [19.0, 3902.8571428571427], [20.0, 4005.6], [21.0, 3189.5], [22.0, 4456.0], [23.0, 3091.0], [24.0, 4101.857142857143], [25.0, 4658.285714285715], [26.0, 4433.857142857143], [27.0, 3136.8], [28.0, 6243.0], [29.0, 5188.363636363636], [30.0, 5098.333333333333], [31.0, 4047.5], [33.0, 4030.5], [32.0, 6347.5], [35.0, 4110.5], [34.0, 7051.5], [37.0, 6622.8], [36.0, 7743.5], [39.0, 6890.0], [38.0, 7962.0], [41.0, 5962.0], [40.0, 8408.5], [43.0, 8617.0], [42.0, 9104.0], [45.0, 5740.5], [44.0, 9877.142857142857], [46.0, 234.0], [47.0, 5770.5], [48.0, 3884.0], [49.0, 3483.75], [50.0, 2755.75], [51.0, 5082.444444444444], [52.0, 1625.9999999999998], [53.0, 3385.0], [54.0, 1914.3333333333333], [55.0, 1449.4444444444443], [56.0, 1470.0], [57.0, 2245.9090909090905], [58.0, 1636.2857142857142], [59.0, 5425.933333333333], [60.0, 5518.75], [61.0, 1864.7999999999997], [62.0, 2884.2142857142862], [63.0, 1650.9230769230771], [64.0, 1033.3333333333333], [65.0, 1000.4375], [66.0, 4164.074074074074], [67.0, 2116.4827586206898], [68.0, 437.258064516129], [69.0, 9242.259259259254], [70.0, 1743.65625], [71.0, 7006.176470588235], [72.0, 8521.662921348314], [73.0, 791.4333333333333], [74.0, 4976.510638297871], [75.0, 922.9285714285714], [76.0, 787.5454545454545], [77.0, 85.66666666666667], [78.0, 3356.4615384615386], [79.0, 814.9047619047617], [80.0, 329.7857142857143], [81.0, 371.61538461538476], [82.0, 101.1111111111111], [1.0, 3437.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[61.59900000000004, 4173.699999999996]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 82.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2541.9333333333334, "minX": 1.58202258E12, "maxY": 276276.63333333336, "series": [{"data": [[1.58202264E12, 216915.16666666666], [1.58202258E12, 276276.63333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.58202264E12, 2541.9333333333334], [1.58202258E12, 10224.733333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58202264E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 39.36492890995257, "minX": 1.58202258E12, "maxY": 7426.945701357471, "series": [{"data": [[1.58202264E12, 7283.927601809958], [1.58202258E12, 3163.5032092426195]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.58202264E12, 86.07692307692301], [1.58202258E12, 52.41469194312795]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.58202264E12, 54.737179487179496], [1.58202258E12, 39.36492890995257]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.58202264E12, 7426.945701357471], [1.58202258E12, 3250.7637997432607]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58202264E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 37.885750962772754, "minX": 1.58202258E12, "maxY": 7282.624434389142, "series": [{"data": [[1.58202264E12, 7282.624434389142], [1.58202258E12, 3163.1142490372267]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.58202264E12, 86.0705128205128], [1.58202258E12, 52.40758293838858]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.58202264E12, 54.730769230769226], [1.58202258E12, 39.35781990521322]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.58202264E12, 55.39819004524889], [1.58202258E12, 37.885750962772754]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58202264E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 9.644415917843393, "minX": 1.58202258E12, "maxY": 59.081447963800905, "series": [{"data": [[1.58202264E12, 59.081447963800905], [1.58202258E12, 20.92169448010268]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.58202264E12, 57.852564102564095], [1.58202258E12, 24.168246445497637]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.58202264E12, 26.371794871794876], [1.58202258E12, 11.087677725118487]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.58202264E12, 26.963800904977372], [1.58202258E12, 9.644415917843393]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58202264E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.58202258E12, "maxY": 14768.0, "series": [{"data": [[1.58202264E12, 13516.0], [1.58202258E12, 14768.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.58202264E12, 26.0], [1.58202258E12, 26.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.58202264E12, 10872.5], [1.58202258E12, 11074.400000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.58202264E12, 12584.15], [1.58202258E12, 13713.699999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.58202264E12, 11874.5], [1.58202258E12, 12174.699999999997]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58202264E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 3.0, "maxY": 11934.0, "series": [{"data": [[33.0, 5775.0], [35.0, 7310.0], [37.0, 28.0], [36.0, 9555.5], [39.0, 9595.0], [40.0, 87.0], [42.0, 90.5], [3.0, 10664.0], [48.0, 92.0], [50.0, 9235.5], [53.0, 11140.0], [55.0, 93.0], [57.0, 10521.0], [58.0, 94.0], [4.0, 6352.0], [75.0, 57.0], [5.0, 92.5], [6.0, 1856.0], [8.0, 11214.0], [9.0, 11934.0], [10.0, 4357.5], [12.0, 92.5], [13.0, 941.0], [249.0, 28.0], [16.0, 1036.0], [17.0, 6810.0], [18.0, 1450.0], [19.0, 2634.0], [335.0, 28.0], [20.0, 3776.0], [21.0, 437.0], [365.0, 28.0], [22.0, 101.0], [23.0, 90.0], [24.0, 92.5], [409.0, 28.0], [410.0, 28.0], [25.0, 7657.5], [26.0, 11629.0], [435.0, 28.0], [27.0, 87.0], [28.0, 92.5], [29.0, 7717.0], [30.0, 9260.5], [31.0, 93.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[75.0, 85.0], [37.0, 84.0], [335.0, 84.0], [365.0, 83.0], [409.0, 83.0], [410.0, 83.0], [435.0, 83.0], [249.0, 84.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 435.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 3.0, "maxY": 225.5, "series": [{"data": [[33.0, 58.0], [35.0, 60.0], [37.0, 28.0], [36.0, 75.0], [39.0, 60.0], [40.0, 57.0], [42.0, 58.0], [3.0, 57.0], [48.0, 75.0], [50.0, 59.0], [53.0, 61.0], [55.0, 84.0], [57.0, 59.0], [58.0, 74.0], [4.0, 91.0], [75.0, 56.0], [5.0, 91.5], [6.0, 225.5], [8.0, 73.0], [9.0, 57.0], [10.0, 72.5], [12.0, 90.0], [13.0, 58.0], [249.0, 28.0], [16.0, 86.5], [17.0, 87.0], [18.0, 59.5], [19.0, 87.0], [335.0, 28.0], [20.0, 58.5], [21.0, 58.0], [365.0, 28.0], [22.0, 59.5], [23.0, 58.0], [24.0, 58.5], [409.0, 28.0], [410.0, 28.0], [25.0, 59.0], [26.0, 76.5], [435.0, 28.0], [27.0, 57.0], [28.0, 90.5], [29.0, 88.0], [30.0, 73.0], [31.0, 87.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[75.0, 29.0], [37.0, 29.0], [335.0, 28.0], [365.0, 28.0], [409.0, 28.0], [410.0, 28.0], [435.0, 28.0], [249.0, 28.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 435.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 10.266666666666667, "minX": 1.58202258E12, "maxY": 56.4, "series": [{"data": [[1.58202264E12, 10.266666666666667], [1.58202258E12, 56.4]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58202264E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 5.2, "minX": 1.58202258E12, "maxY": 28.133333333333333, "series": [{"data": [[1.58202264E12, 7.366666666666666], [1.58202258E12, 8.566666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.58202264E12, 5.2], [1.58202258E12, 28.133333333333333]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.58202258E12, 17.4]], "isOverall": false, "label": "503", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.58202264E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2.6, "minX": 1.58202258E12, "maxY": 14.066666666666666, "series": [{"data": [[1.58202264E12, 3.683333333333333], [1.58202258E12, 4.283333333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.58202258E12, 8.7]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.58202264E12, 2.6], [1.58202258E12, 14.066666666666666]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.58202264E12, 2.6], [1.58202258E12, 14.066666666666666]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.58202264E12, 3.683333333333333], [1.58202258E12, 4.283333333333333]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}, {"data": [[1.58202258E12, 8.7]], "isOverall": false, "label": "HTTP Request-2-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58202264E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 12.566666666666666, "minX": 1.58202258E12, "maxY": 36.7, "series": [{"data": [[1.58202264E12, 12.566666666666666], [1.58202258E12, 36.7]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.58202258E12, 17.4]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.58202264E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

